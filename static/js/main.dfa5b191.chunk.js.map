{"version":3,"sources":["images/logo.svg","constants/actionTypes.js","middleware.js","reducers/auth.js","reducers/common.js","reducers/home.js","reducers/settings.js","reducers/code.js","reducers/codeForm.js","reducers/editor.js","reducers/editorSideNav.js","reducer.js","store.js","components/Header.js","components/NoMatch.js","components/home/ReportDeleteButton.js","utils/downloadPdf.js","components/home/ReportButtonGroup.js","components/home/ReportList.js","components/home/Disclaimer.js","components/ListErrors.js","components/home/index.js","components/Login.js","components/Register.js","constants/config.js","components/editor/SideNav.js","components/editor/FunctionValue.js","components/editor/StructureValue.js","components/editor/ActivityValue.js","components/editor/ContextValue.js","utils/newId.js","components/editor/FunctionElement.js","components/editor/FunctionList.js","components/editor/PatientElement.js","components/editor/TherapistElement.js","components/editor/index.js","components/Settings.js","components/code/CodeDeleteButton.js","components/code/CodeList.js","components/code/CodeForm.js","components/code/index.js","utils/ProtectedRoute.js","components/App.js","index.js","agent.js"],"names":["module","exports","LOGIN","promiseMiddleware","store","next","action","v","payload","then","dispatch","type","subtype","currentView","getState","viewChangeCounter","skipTracking","res","currentState","promise","error","response","body","localStorageMiddleware","window","localStorage","setItem","user","token","agent","setToken","defaultState","redirectToHome","state","inProgress","errors","key","value","appName","appLoaded","currentUser","reports","filter","r","id","reportId","codes","concat","code","successId","map","c","Object","assign","codeId","newCode","codeReceived","title","description","inclusions","exclusions","modal","report","patient","name","surname","diagnosis","dob","therapist","company","date","Moment","isValid","toDate","functions","f","structures","s","activities","a","contexts","freeText","newReport","func","struc","act","con","functionId","structureId","activityId","contextId","isDirty","createRootReducer","history","combineReducers","auth","common","home","settings","codeForm","editor","editorSideNav","router","connectRouter","createBrowserHistory","basename","myRouterMiddleware","routerMiddleware","createStore","composeWithDevTools","applyMiddleware","LoggedOutView","props","className","to","href","target","rel","LoggedInView","UncontrolledDropdown","DropdownToggle","nav","caret","username","DropdownMenu","DropdownItem","onClick","goToSettings","divider","onClickLogout","Header","toggle","bind","isOpen","this","setState","push","Navbar","color","dark","expand","src","logo","alt","toUpperCase","NavbarToggler","Collapse","navbar","Component","connect","NoMatch","ev","stopPropagation","nativeEvent","stopImmediatePropagation","Report","remove","del","filename","disposition","header","indexOf","matches","exec","replace","blob","Blob","navigator","msSaveBlob","URL","webkitURL","downloadUrl","createObjectURL","document","createElement","download","open","appendChild","setAttribute","click","setTimeout","revokeObjectURL","ReportButtonGroup","dropdownOpen","downloadPdf","getPdfFromDB","ButtonDropdown","openEditor","ReportList","console","log","length","ListGroup","format","items","altText","caption","text","quote","Disclaimer","activeIndex","previous","goToIndex","onExiting","onExited","animating","nextIndex","newIndex","slides","item","CarouselItem","CarouselCaption","captionText","captionHeader","Jumbotron","Button","goToRegister","Carousel","CarouselIndicators","onClickHandler","CarouselControl","direction","directionText","ListErrors","keys","UncontrolledAlert","React","Home","onLoad","Promise","all","onUnload","Login","changeEmail","onChangeEmail","changePassword","onChangePassword","submitForm","email","password","preventDefault","onSubmit","Alert","Form","FormGroup","row","Label","for","sm","Col","Input","placeholder","onChange","check","size","offset","disabled","Auth","login","Register","changeUsername","onChangeUsername","changeFirstname","onChangeFirstname","changeLastname","onChangeLastname","firstname","lastname","required","register","API_VERSION","SideNav","patientId","therapistId","hasReport","update","create","createPdf","find","getPdf","dump","hash","md5","JSON","stringify","version","style","json","url","Date","getTime","upload","files","match","reader","FileReader","onload","e","parse","result","alert","onUploadReport","readAsText","aria-hidden","htmlFor","FunctionValue","handleValueChange","val","Number","onUpdateFieldFunctionValue","funcId","tag","Row","noGutters","checked","ContextValue","onUpdateFieldStructureValue","changeExtend","changeNature","changeLocation","extend","nature","location","ActivityValue","onUpdateFieldActivityValue","changePerformance","changeCapacity","performance","capacity","onUpdateFieldContextValue","lastId","prefix","ValueElement","kind","StructureValue","FunctionElement","getCodeFromId","empty","found","undefined","toggleCheckbox","sourceOfInfo","labelIndex","findIndex","splice","onUpdateFieldFunction","onUpdateFieldStructure","onUpdateFieldActivity","onUpdateFieldContext","isCheckboxChecked","label","collapse","i","tagName","getElementsByTagName","getElementById","includes","display","removeFunction","Function","onDeleteFunction","onDeleteStructure","onDeleteActivity","onDeleteContext","updateFieldEvent","changeCodeId","changeDescription","newId","descriptionId","Card","CardBody","aria-label","hidden","xs","defaultChecked","FunctionList","locale","momentLocalizer","PatientElement","onUpdateField","changeName","changeSurname","changeDiagnosis","changeDob","nameId","surnameId","CardHeader","time","TherapistElement","changeCompany","Editor","changeType","changeFreeText","changeDate","addFunction","obj","Math","floor","random","NaN","onAddFunction","onAddStructure","onAddActivity","onAddContext","prevProps","forEach","updateFunctions","params","promises","Code","get","onSubmitFunction","hasOwnProperty","sideNav","Settings","onSubmitForm","save","newUser","updateState","tempUser","outline","CodeForm","hasCurrentCode","tempCode","onCodeUpdate","onCodeAdded","cancel","onToggle","Modal","ModalHeader","ModalBody","ModalFooter","Nav","NavItem","onToggleCodeEditor","ProtectedRoute","component","rest","render","App","getItem","current","exact","path","ReactDOM","superagent","superagentPromise","_superagent","global","API_ROOT","encode","encodeURIComponent","responseBody","tokenPlugin","req","set","requests","use","put","post","Profile","responseType","functionParam","Patient","Therapist","_token"],"mappings":"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","file":"static/js/main.dfa5b191.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f6ef32c7.svg\";","export const APP_LOAD = 'APP_LOAD';\nexport const ASYNC_START = 'ASYNC_START';\nexport const ASYNC_END = 'ASYNC_END';\n\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\nexport const UPDATE_FIELD_AUTH = 'UPDATE_FIELD_AUTH';\nexport const LOGIN_PAGE_UNLOADED = 'LOGIN_PAGE_UNLOADED';\n\nexport const REGISTER = 'REGISTER';\nexport const REGISTER_PAGE_UNLOADED = 'REGISTER_PAGE_UNLOADED';\n\nexport const SETTINGS_SAVED = 'SETTINGS_SAVED';\nexport const SETTINGS_PAGE_UNLOADED = 'SETTINGS_PAGE_UNLOADED';\n\nexport const HOME_PAGE_LOADED = 'HOME_PAGE_LOADED';\nexport const SET_PAGE = 'SET_PAGE';\nexport const HOME_PAGE_UNLOADED = 'HOME_PAGE_UNLOADED';\n\nexport const EDITOR_PAGE_LOADED = 'EDITOR_PAGE_LOADED';\nexport const EDITOR_PAGE_UNLOADED = 'EDITOR_PAGE_UNLOADED';\n\nexport const REPORT_SUBMITTED = 'REPORT_SUBMITTED';\nexport const DELETE_REPORT = 'DELETE_REPORT';\nexport const UPDATE_FIELD_REPORT = 'UPDATE_FIELD_REPORT';\nexport const UPDATE_FIELD_REPORT_PATIENT = 'UPDATE_FIELD_REPORT_PATIENT';\nexport const UPDATE_FIELD_REPORT_THERAPIST = 'UPDATE_FIELD_REPORT_THERAPIST';\n\nexport const REPORT_UPLOADED = 'REPORT_UPLOADED';\nexport const EDITOR_SIDENAV_LOADED = 'EDITOR_SIDENAV_LOADED';\nexport const EDITOR_SIDENAV_UNLOADED = 'EDITOR_SIDENAV_UNLOADED';\n\nexport const FUNCTION_SUBMITTED = 'FUNCTION_SUBMITTED';\nexport const DELETE_FUNCTION = 'DELETE_FUNCTION';\nexport const FUNCTION_ADDED = 'FUNCTION_ADDED';\nexport const UPDATE_FIELD_FUNCTION = 'UPDATE_FIELD_FUNCTION';\nexport const UPDATE_FIELD_FUNCTION_VALUE = 'UPDATE_FIELD_FUNCTION_VALUE';\nexport const DELETE_STRUCTURE = 'DELETE_STRUCTURE';\nexport const STRUCTURE_ADDED = 'STRUCTURE_ADDED';\nexport const UPDATE_FIELD_STRUCTURE = 'UPDATE_FIELD_STRUCTURE';\nexport const UPDATE_FIELD_STRUCTURE_VALUE = 'UPDATE_FIELD_STRUCTURE_VALUE';\nexport const DELETE_ACTIVITY = 'DELETE_ACTIVITY';\nexport const ACTIVITY_ADDED = 'ACTIVITY_ADDED';\nexport const UPDATE_FIELD_ACTIVITY = 'UPDATE_FIELD_ACTIVITY';\nexport const UPDATE_FIELD_ACTIVITY_VALUE = 'UPDATE_FIELD_ACTIVITY_VALUE';\nexport const DELETE_CONTEXT = 'DELETE_CONTEXT';\nexport const CONTEXT_ADDED = 'CONTEXT_ADDED';\nexport const UPDATE_FIELD_CONTEXT = 'UPDATE_FIELD_CONTEXT';\nexport const UPDATE_FIELD_CONTEXT_VALUE = 'UPDATE_FIELD_CONTEXT_VALUE';\nexport const FUNCTION_SAVED = 'FUNCTION_SAVED';\n\nexport const CODE_PAGE_LOADED = 'CODE_PAGE_LOADED';\nexport const CODE_PAGE_UNLOADED = 'CODE_PAGE_UNLOADED';\nexport const CODE_FORM_PAGE_LOADED = 'CODE_FORM_PAGE_LOADED';\nexport const CODE_FORM_PAGE_UNLOADED = 'CODE_FORM_PAGE_UNLOADED';\nexport const CODE_SUBMITTED = 'CODE_SUBMITTED';\nexport const DELETE_CODE = 'DELETE_CODE';\nexport const CODE_ADDED = 'CODE_ADDED';\nexport const CODE_UPDATED = 'CODE_UPDATED';\nexport const CODE_EDITOR_PAGE_TOGGLED = 'CODE_EDITOR_PAGE_TOGGLED';","import agent from './agent';\nimport {\n    ASYNC_START,\n    ASYNC_END,\n    LOGIN,\n    LOGOUT,\n    REGISTER\n} from './constants/actionTypes';\n\nconst promiseMiddleware = store => next => action => {\n    if(isPromise(action.payload)) {\n        store.dispatch({ type: ASYNC_START, subtype: action.type });\n\n        const currentView = store.getState().viewChangeCounter;\n        const skipTracking = action.skipTracking;\n\n        action.payload.then(\n            res => {\n                const currentState = store.getState()\n                if (!skipTracking && currentState.viewChangeCounter !== currentView) {\n                    return\n                }\n                //console.log('RESULT', res);\n                action.payload = res;\n                store.dispatch({ type: ASYNC_END, promise: action.payload });\n                store.dispatch(action);\n            },\n            error => {\n                const currentState = store.getState()\n                if (!skipTracking && currentState.viewChangeCounter !== currentView) {\n                    return\n                }\n                //console.log('ERROR', error);\n                action.error = true;\n                action.payload = error.response.body;\n                if (!action.skipTracking) {\n                    store.dispatch({ type: ASYNC_END, promise: action.payload });\n                }\n                store.dispatch(action);\n            }\n        );\n\n        return;\n    }\n\n    next(action);\n};\n\nconst localStorageMiddleware = store => next => action => {\n    if (action.type === REGISTER || action.type === LOGIN) {\n        if (!action.error) {\n            window.localStorage.setItem('jwt', action.payload.user.token);\n            agent.setToken(action.payload.user.token);\n        }\n    } else if (action.type === LOGOUT) {\n        window.localStorage.setItem('jwt', '');\n        agent.setToken(null);\n    }\n\n    next(action);\n};\n\nfunction isPromise(v) {\n    return v && typeof v.then === 'function';\n}\n\nexport {\n    promiseMiddleware,\n    localStorageMiddleware\n};","import {\n    LOGIN,\n    REGISTER,\n    LOGIN_PAGE_UNLOADED,\n    REGISTER_PAGE_UNLOADED,\n    ASYNC_START,\n    UPDATE_FIELD_AUTH\n} from '../constants/actionTypes';\n\nconst defaultState = {\n    redirectToHome: false\n};\n\nexport default (state = defaultState, action) => {\n    switch (action.type) {\n        case LOGIN:\n        case REGISTER:\n            return {\n                ...state,\n                inProgress: false,\n                errors: action.error ? action.payload.errors : null,\n                redirectToHome: !action.error\n            };\n        case LOGIN_PAGE_UNLOADED:\n        case REGISTER_PAGE_UNLOADED:\n            return {};\n        case ASYNC_START:\n            if (action.subtype === LOGIN || action.subtype === REGISTER) {\n                return { ...state, inProgress: true };\n            }\n            break;\n        case UPDATE_FIELD_AUTH:\n            return { ...state, [action.key]: action.value };\n        default:\n            return state;\n    }\n\n    return state;\n};","import {\n    APP_LOAD,\n    LOGOUT,\n    SETTINGS_SAVED,\n    LOGIN,\n    REGISTER,\n    EDITOR_PAGE_UNLOADED,\n    HOME_PAGE_UNLOADED,\n    SETTINGS_PAGE_UNLOADED,\n    LOGIN_PAGE_UNLOADED,\n    REGISTER_PAGE_UNLOADED\n} from '../constants/actionTypes';\n\nconst defaultState = {\n    appName: 'icf-report',\n    token: null,\n    viewChangeCounter: 0\n};\n\nexport default (state = defaultState, action) => {\n    switch (action.type) {\n        case APP_LOAD:\n            return {\n                ...state,\n                token: action.token || null,\n                appLoaded: true,\n                currentUser: action.payload ? action.payload.user : null\n            };\n        case LOGOUT:\n            return { ...state, token: null, currentUser: null };\n        case SETTINGS_SAVED:\n            return {\n                ...state,\n                currentUser: action.error ? null : action.payload.user\n            };\n        case LOGIN:\n        case REGISTER:\n            return {\n                ...state,\n                token: action.error ? null : action.payload.user.token,\n                currentUser: action.error ? null : action.payload.user\n            };\n        case EDITOR_PAGE_UNLOADED:\n        case HOME_PAGE_UNLOADED:\n        case SETTINGS_PAGE_UNLOADED:\n        case LOGIN_PAGE_UNLOADED:\n        case REGISTER_PAGE_UNLOADED:\n            return { ...state, viewChangeCounter: state.viewChangeCounter + 1 };\n        default:\n            return state;\n    }\n};","import {\n    HOME_PAGE_LOADED,\n    HOME_PAGE_UNLOADED,\n    DELETE_REPORT\n} from '../constants/actionTypes';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case HOME_PAGE_LOADED:\n            return {\n                ...state,\n                reports: action.payload[0]\n            };\n        case HOME_PAGE_UNLOADED:\n            return {};\n\t\tcase DELETE_REPORT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\treports: state.reports.filter(r => r.id !== action.reportId),\n                errors: action.error ? action.payload.errors : null\n\t\t\t};\n        default:\n            return state;\n    }\n};","import {\n\tSETTINGS_SAVED,\n    SETTINGS_PAGE_UNLOADED,\n\tASYNC_START\n} from '../constants/actionTypes';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case SETTINGS_SAVED:\n            return {\n                ...state,\n                inProgress: false,\n                errors: action.error ? action.payload.errors : null\n            };\n        case SETTINGS_PAGE_UNLOADED:\n            return {};\n        case ASYNC_START:\n\t\t\tif (action.subtype === SETTINGS_SAVED) {\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tinProgress: true\n\t\t\t\t};\n\t\t\t}\n\t\t\tbreak;\n        default:\n            return state;\n    }\n    \n    return state;\n};","import {\n    CODE_PAGE_LOADED,\n    CODE_PAGE_UNLOADED,\n    DELETE_CODE,\n    CODE_ADDED,\n    CODE_UPDATED\n} from \"../constants/actionTypes\";\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case CODE_PAGE_LOADED:\n            return {\n                ...state,\n                codes: action.payload[0]\n            };\n        case CODE_ADDED:\n            return {\n                ...state,\n                codes: (state.codes || []).concat([action.payload.code]),\n                successId: action.payload.code.id\n            };\n        case CODE_UPDATED:\n            return {\n                ...state,\n                codes: state.codes.map(c => {\n                    if(c.id === action.payload.code.id) {\n                        return Object.assign(c, action.payload.code);\n                    }\n                    return c;\n                }),\n                successId: action.payload.code.id\n            };\n        case DELETE_CODE:\n            return {\n                ...state,\n                codes: state.codes.filter(c => c.id !== action.codeId),\n                errors: action.error ? action.payload.errors : null,\n                successId: action.codeId\n            };\n        case CODE_PAGE_UNLOADED:\n            return {};\n        default:\n            return state;\n    }\n}","import {\n    CODE_FORM_PAGE_LOADED,\n    CODE_FORM_PAGE_UNLOADED,\n    CODE_SUBMITTED,\n    ASYNC_START,\n    CODE_EDITOR_PAGE_TOGGLED\n} from '../constants/actionTypes';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case CODE_SUBMITTED:\n            return {\n                ...state,\n                inProgress: null,\n                newCode: !action.error ? action.payload.code : null,\n                errors: action.error ? action.payload.errors : null\n            };\n        case ASYNC_START:\n            if (action.subtype === CODE_SUBMITTED) {\n                return { ...state, inProgress: true };\n            }\n            break;\n        case CODE_FORM_PAGE_LOADED:\n            return {\n                ...state,\n                codeReceived: true,\n                code: action.payload  ? action.payload.code.code : '',\n                title: action.payload  ? action.payload.code.title : '',\n                description: action.payload  ? action.payload.code.description : '',\n                inclusions: [],\n                exclusions: []\n            };\n        case CODE_EDITOR_PAGE_TOGGLED:\n            return {\n                ...state,\n                modal: state.modal ? !state.modal : true,\n                codeId: action.codeId ? action.codeId : null\n            };\n        case CODE_FORM_PAGE_UNLOADED:\n            return {};\n        default:\n            return state;\n    }\n\n    return state;\n};","import Moment from 'moment';\nimport {\n    EDITOR_PAGE_LOADED,\n    EDITOR_PAGE_UNLOADED,\n    REPORT_SUBMITTED,\n    ASYNC_START,\n    UPDATE_FIELD_REPORT,\n    FUNCTION_ADDED,\n    STRUCTURE_ADDED,\n    ACTIVITY_ADDED,\n    CONTEXT_ADDED,\n    DELETE_FUNCTION,\n    DELETE_STRUCTURE,\n    DELETE_ACTIVITY,\n    DELETE_CONTEXT,\n    UPDATE_FIELD_FUNCTION,\n    UPDATE_FIELD_STRUCTURE,\n    UPDATE_FIELD_ACTIVITY,\n    UPDATE_FIELD_CONTEXT,\n    UPDATE_FIELD_FUNCTION_VALUE,\n    UPDATE_FIELD_STRUCTURE_VALUE,\n    UPDATE_FIELD_ACTIVITY_VALUE,\n    UPDATE_FIELD_CONTEXT_VALUE,\n    REPORT_UPLOADED,\n    UPDATE_FIELD_REPORT_PATIENT,\n    UPDATE_FIELD_REPORT_THERAPIST,\n    FUNCTION_SUBMITTED\n} from \"../constants/actionTypes\";\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case EDITOR_PAGE_LOADED:\n            return {\n                ...state,\n                codes: action.payload[0],\n\t\t\t\treportId: action.payload[1] ? action.payload[1].report.id : -1,\n                patient: {name: '', surname: '', diagnosis: '', dob: null},\n                therapist: {name: \"\", surname: '', company: ''},\n                type: action.payload[1] ? action.payload[1].report.type : '',\n\t\t\t\tdate: action.payload[1] && Moment(action.payload[1].report.date, 'YYYY-MM-DD').isValid()  ? Moment(action.payload[1].report.date, 'YYYY-MM-DD').toDate() : null,\n\t\t\t\tfunctions: action.payload[2] ? action.payload[2].map(f => {return {...f, codeId: f.code.id, value: {}}}) : [],\n\t\t\t\tstructures: action.payload[3] ? action.payload[3].map(s => {return {...s, codeId: s.code.id, value: {}}}) : [],\n\t\t\t\tactivities: action.payload[4] ? action.payload[4].map(a => {return {...a, codeId: a.code.id, value: {}}}) : [],\n\t\t\t\tcontexts: action.payload[5] ? action.payload[5].map(c => {return {...c, codeId: c.code.id, value: {}}}) : []\n            };\n        case EDITOR_PAGE_UNLOADED:\n            return {};\n        case REPORT_UPLOADED:\n            return {\n                ...state,\n                reportId: action.payload ? action.payload.id : -1,\n                type: action.payload ? action.payload.type : '',\n                patient: action.payload ? {\n                    name: action.payload.patient.name,\n                    surname: action.payload.patient.surname,\n                    diagnosis: action.payload.patient.diagnosis,\n                    dob: Moment(action.payload.patient.dob, 'YYYY-MM-DD').isValid()  ? Moment(action.payload.patient.dob, 'YYYY-MM-DD').toDate() : null\n                } : '',\n                therapist: action.payload ? action.payload.therapist : '',\n                freeText: action.payload ? action.payload.freeText : '',\n                date: action.payload && Moment(action.payload.date, 'YYYY-MM-DD').isValid()  ? Moment(action.payload.date, 'YYYY-MM-DD').toDate() : null,\n                functions: action.payload.functions ? action.payload.functions : [],\n                structures: action.payload.structures ? action.payload.structures : [],\n                activities: action.payload.activities ? action.payload.activities : [],\n                contexts: action.payload.contexts ? action.payload.contexts : []\n            };\n\t\tcase REPORT_SUBMITTED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tinProgress: null,\n\t\t\t\terrors: action.error ? action.payload.errors : null,\n\t\t\t\tnewReport: !action.error ? action.payload.report : null,\n\t\t\t};\n        case ASYNC_START:\n\t\t\tif (action.subtype === REPORT_SUBMITTED) {\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tinProgress: true\n\t\t\t\t};\n\t\t\t}\n\t\t\tbreak;\n\t\tcase UPDATE_FIELD_REPORT:\n\t\t\treturn {\n\t\t\t    ...state,\n                [action.key]: action.value\n\t\t\t};\n        case UPDATE_FIELD_REPORT_PATIENT:\n            state.patient[action.key] = action.value;\n            return {...state};\n        case UPDATE_FIELD_REPORT_THERAPIST:\n            state.therapist[action.key] = action.value;\n            return {...state};\n        case FUNCTION_SUBMITTED:\n            return {\n                ...state,\n                newReport: null,\n                inProgress: null,\n                errors: action.error ? action.payload.errors : null\n            };\n\t\tcase FUNCTION_ADDED:\n\t\t\treturn {\n\t\t\t\t...state,\n                functions: (state.functions || []).concat([action.func])\n\t\t\t};\n\t\tcase STRUCTURE_ADDED:\n\t\t\treturn {\n\t\t\t\t...state,\n                structures: (state.structures || []).concat([action.struc])\n\t\t\t};\n\t\tcase ACTIVITY_ADDED:\n\t\t\treturn {\n\t\t\t\t...state,\n                activities: (state.activities || []).concat([action.act])\n\t\t\t};\n\t\tcase CONTEXT_ADDED:\n\t\t\treturn {\n\t\t\t\t...state,\n                contexts: (state.contexts || []).concat([action.con])\n\t\t\t};\n        case DELETE_FUNCTION:\n            return {\n                ...state,\n                functions: state.functions.filter(f => f.id !== action.functionId),\n                errors: action.error ? action.payload.errors : null\n            };\n        case DELETE_STRUCTURE:\n            return {\n                ...state,\n                structures: state.structures.filter(s => s.id !== action.structureId),\n                errors: action.error ? action.payload.errors : null\n            };\n        case DELETE_ACTIVITY:\n            return {\n                ...state,\n                activities: state.activities.filter(a => a.id !== action.activityId),\n                errors: action.error ? action.payload.errors : null\n            };\n        case DELETE_CONTEXT:\n            return {\n                ...state,\n                contexts: state.contexts.filter(c => c.id !== action.contextId),\n                errors: action.error ? action.payload.errors : null\n            };\n        case UPDATE_FIELD_FUNCTION:\n            return {\n                ...state,\n                functions: state.functions.map(f => {\n                    if(f.id === action.functionId) {\n                        f.isDirty = true;\n                        f[action.key] = action.value;\n                    }\n                    return f;\n                })\n            };\n        case UPDATE_FIELD_STRUCTURE:\n            return {\n                ...state,\n                structures: state.structures.map(s => {\n                    if(s.id === action.structureId) {\n                        s.isDirty = true;\n                        s[action.key] = action.value;\n                    }\n                    return s;\n                })\n            };\n        case UPDATE_FIELD_ACTIVITY:\n            return {\n                ...state,\n                activities: state.activities.map(a => {\n                    if(a.id === action.activityId) {\n                        a.isDirty = true;\n                        a[action.key] = action.value;\n                    }\n                    return a;\n                })\n            };\n        case UPDATE_FIELD_CONTEXT:\n            return {\n                ...state,\n                contexts: state.contexts.map(c => {\n                    if(c.id === action.contextId) {\n                        c.isDirty = true;\n                        c[action.key] = action.value;\n                    }\n                    return c;\n                })\n            };\n        case UPDATE_FIELD_FUNCTION_VALUE:\n            return {\n                ...state,\n                functions: state.functions.map(f => {\n                    if(f.id === action.functionId) {\n                        f.isDirty = true;\n                        f.value[action.key] = action.value;\n                    }\n                    return f;\n                })\n            };\n        case UPDATE_FIELD_STRUCTURE_VALUE:\n            return {\n                ...state,\n                structures: state.structures.map(s => {\n                    if(s.id === action.structureId) {\n                        s.isDirty = true;\n                        s.value[action.key] = action.value;\n                    }\n                    return s;\n                })\n            };\n        case UPDATE_FIELD_ACTIVITY_VALUE:\n            return {\n                ...state,\n                activities: state.activities.map(a => {\n                    if(a.id === action.activityId) {\n                        a.isDirty = true;\n                        a.value[action.key] = action.value;\n                    }\n                    return a;\n                })\n            };\n        case UPDATE_FIELD_CONTEXT_VALUE:\n            return {\n                ...state,\n                contexts: state.contexts.map(c => {\n                    if(c.id === action.contextId) {\n                        c.isDirty = true;\n                        c.value[action.key] = action.value;\n                    }\n                    return c;\n                })\n            };\n        default:\n            return state;\n    }\n    \n    return state;\n}","import {\n    EDITOR_SIDENAV_LOADED,\n    EDITOR_SIDENAV_UNLOADED\n} from \"../constants/actionTypes\";\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case EDITOR_SIDENAV_LOADED:\n            return {\n                ...state\n            };\n        case EDITOR_SIDENAV_UNLOADED:\n            return {};\n        default:\n            return state;\n    }\n}","import auth from './reducers/auth';\nimport { combineReducers } from 'redux';\nimport common from './reducers/common';\nimport home from './reducers/home';\nimport settings from './reducers/settings';\nimport code from './reducers/code';\nimport codeForm from './reducers/codeForm';\nimport editor from './reducers/editor';\nimport editorSideNav from './reducers/editorSideNav';\nimport { connectRouter } from 'connected-react-router'\n\nconst createRootReducer = (history) => combineReducers({\n    auth,\n    common,\n    home,\n    settings,\n    code,\n    codeForm,\n    editor,\n    editorSideNav,\n    router: connectRouter(history)\n});\n\nexport default createRootReducer","import { applyMiddleware, createStore } from 'redux';\nimport { createLogger } from 'redux-logger'\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport { promiseMiddleware, localStorageMiddleware } from './middleware';\nimport createRootReducer from './reducer';\n\nimport { routerMiddleware } from 'connected-react-router'\nimport { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory({basename: '/ICF_Report_Webapp_React'});\n\n// Build the middleware for intercepting and dispatching navigation actions\nconst myRouterMiddleware = routerMiddleware(history);\n\nconst getMiddleware = () => {\n    if (process.env.NODE_ENV === 'production') {\n        return applyMiddleware(myRouterMiddleware, promiseMiddleware, localStorageMiddleware);\n    } else {\n        // Enable additional logging in non-production environments.\n        return applyMiddleware(myRouterMiddleware, promiseMiddleware, localStorageMiddleware, createLogger())\n    }\n};\n\nexport const store = createStore(\n    createRootReducer(history), \n    composeWithDevTools(getMiddleware()));","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport {Collapse, Navbar, NavbarToggler,UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem} from 'reactstrap';\nimport logo from '../images/logo.svg';\nimport {LOGOUT} from \"../constants/actionTypes\";\nimport { connect } from 'react-redux';\nimport { store } from '../store';\nimport { push } from 'connected-react-router';\n\nconst mapDispatchToProps = dispatch => ({\n    onClickLogout: () => dispatch({ type: LOGOUT })\n});\n\nconst LoggedOutView = props => {\n    if (!props.currentUser) {\n        return (\n            <ul className=\"ml-auto navbar-nav\">\n                <li className=\"nav-item\">\n                    <Link to=\"/\" className=\"nav-link\">Home</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link to=\"/login\" className=\"nav-link\">Sign in</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link to=\"/register\" className=\"nav-link\">Sign up</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <a className=\"nav-link\" href=\"https://loaded02.github.io/ICF_Report_Webapp_Blog/\" target=\"_blank\"\n                       rel=\"noopener noreferrer\">Blog</a>\n                </li>\n            </ul>\n        );\n    }\n    return null;\n};\n\nconst LoggedInView = props => {\n    if (props.currentUser) {\n        return (\n            <ul className=\"ml-auto navbar-nav\">\n                <li className=\"nav-item\">\n                    <Link to=\"/\" className=\"nav-link\">Home</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link to=\"/editor\" className=\"nav-link\">New Report</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link to=\"/code\" className=\"nav-link\">Codes</Link>\n                </li>\n                <UncontrolledDropdown>\n                    <DropdownToggle nav caret>\n                        {props.currentUser.username}\n                    </DropdownToggle>\n                    <DropdownMenu>\n                        <DropdownItem onClick={props.goToSettings}>\n                            Settings\n                        </DropdownItem>\n                        <DropdownItem divider />\n                        <DropdownItem onClick={props.onClickLogout}>\n                            Logout\n                        </DropdownItem>\n                    </DropdownMenu>\n                </UncontrolledDropdown>\n                <li className=\"nav-item\">\n                    <a className=\"nav-link\" href=\"https://loaded02.github.io/ICF_Report_Webapp_Blog/\" target=\"_blank\"\n                       rel=\"noopener noreferrer\">Blog</a>\n                </li>\n            </ul>\n        )\n    }\n    return null;\n};\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen: false\n        };\n    }\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n    goToSettings() {\n        store.dispatch(push('/settings'));\n    }\n    render() {\n        return (\n            <div>\n                <Navbar color=\"dark\" dark expand=\"md\">\n                    <Link to=\"/\" className=\"navbar-brand mr-auto\">\n                        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                        {' '}{this.props.appName.toUpperCase()}\n                    </Link>\n                    <NavbarToggler onClick={this.toggle} className=\"mr-2\"/>\n                    <Collapse isOpen={this.state.isOpen} navbar>\n                        <LoggedOutView currentUser={this.props.currentUser} />\n                        <LoggedInView currentUser={this.props.currentUser}\n                            goToSettings={this.goToSettings}\n                            onClickLogout={this.props.onClickLogout}/>\n                    </Collapse>\n                </Navbar>\n            </div>\n        );\n    }\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(Header);\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nclass NoMatch extends Component {\n\n    render() {\n        return (\n\t\t\t<div className=\"container main\">\n\t\t\t\t<h1>No matching route for the given URL.</h1>\n            </div>\n        )\n    }\n}\n\nexport default connect(() => ({}), () => ({}))(NoMatch);","import React from 'react';\nimport agent from '../../agent';\nimport { DropdownItem } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { DELETE_REPORT } from '../../constants/actionTypes';\n\nconst mapDispatchToProps = dispatch => ({\n    onClick: (payload, reportId) =>\n        dispatch({ type: DELETE_REPORT, payload, reportId })\n});\n\nconst ReportDeleteButton = props => {\n    const del = ev => {\n        ev.stopPropagation();\n        ev.nativeEvent.stopImmediatePropagation();\n        const payload = agent.Report.remove(props.reportId);\n        props.onClick(payload, props.reportId);\n    };\n\n    return (\n        <DropdownItem onClick={(ev) => del(ev)}>Remove</DropdownItem>\n    );\n};\n\nexport default connect(() => ({}), mapDispatchToProps)(ReportDeleteButton);","export default function(res) {\n    let filename = \"\";\n    const disposition = res.header['content-disposition'];\n    if (disposition && disposition.indexOf('attachment') !== -1) {\n        const filenameRegex = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/;\n        const matches = filenameRegex.exec(disposition);\n        if (matches != null && matches[1]) filename = matches[1].replace(/['\"]/g, '');\n    }\n    const blob = new Blob([res.body], {type: res.type});\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were revoked by closing the blob for which they were created. These URLs will no longer resolve as the data backing the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        const URL = window.URL || window.webkitURL;\n        const downloadUrl = URL.createObjectURL(blob);\n\n        if (filename) {\n            // use HTML5 a[download] attribute to specify filename\n            const a = document.createElement(\"a\");\n            // safari doesn't support this yet\n            if (typeof a.download === 'undefined') {\n                window.open(downloadUrl, '_blank');\n            } else {\n                a.href = downloadUrl;\n                a.download = filename;\n                document.body.appendChild(a);\n                a.setAttribute(\"target\",\"_blank\");\n                a.click();\n            }\n        } else {\n            window.open(downloadUrl, '_blank');\n        }\n\n        setTimeout(function () { URL.revokeObjectURL(downloadUrl); }, 100); // cleanup\n    }\n}","import React, {Component} from 'react';\nimport ReportDeleteButton from './ReportDeleteButton';\nimport {ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport agent from '../../agent';\nimport { store } from '../../store';\nimport { push } from 'connected-react-router';\nimport download from '../../utils/downloadPdf';\n\nconst mapStateToProps = state => ({\n    ...state.home\n});\n\nclass ReportButtonGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            dropdownOpen: false\n        };\n\n        this.downloadPdf = (ev, reportId) => {\n            ev.stopPropagation();\n            ev.nativeEvent.stopImmediatePropagation();\n            agent.Report.getPdfFromDB(reportId)\n                .then((blob) => download(blob));\n        };\n    }\n\n    toggle() {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n\n    openEditor() {\n        store.dispatch(push(`/editor/${this.props.report.id}`));\n    }\n\n    render() {\n        return(\n            <ButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n                <DropdownToggle caret color=\"success\">\n                    Actions\n                </DropdownToggle>\n                <DropdownMenu>\n                    <DropdownItem onClick={this.openEditor.bind(this)}>\n                        Create Report</DropdownItem>\n                    <DropdownItem onClick={(ev) => this.downloadPdf(ev, this.props.report.id)}>\n                        Create Plain PDF</DropdownItem>\n                    <DropdownItem divider />\n                    <ReportDeleteButton reportId={this.props.report.id}/>\n                </DropdownMenu>\n            </ButtonDropdown>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, () => ({}))(ReportButtonGroup);","import React from 'react';\nimport Moment from 'moment';\nimport {ListGroup} from 'reactstrap';\nimport ReportButtonGroup from './ReportButtonGroup';\n\nconst ReportList = props => {\n    if (props.error) {\n        console.log(props.error)\n        return (\n            <div>Error {props.error}</div>\n        )\n    }\n    if (!props.reports) {\n        return (\n            <div className=\"report-preview\">Loading...</div>\n        );\n    }\n\n    if (props.reports.length === 0) {\n        return (\n            <div className=\"report-preview\">\n                No reports are here... yet.\n            </div>\n        );\n    }\n\n    return (\n        <ListGroup>\n            {\n                props.reports.map(report => {\n                    return (\n                        <div className=\"list-group-item list-group-item-action flex-column align-items-start\"\n                             key={report.id}>\n                            <div className=\"d-flex w-100 justify-content-between\">\n                                <h5 className=\"mb-1\">{report.type}</h5>\n                            </div>\n                            <div className=\"d-flex w-100 justify-content-between\">\n                                <p className=\"mb-1\">{Moment(report.date).isValid() ? Moment(report.date).format('DD.MM.YYYY') : ''}</p>\n                                <div className=\"mb-1\">\n                                    <ReportButtonGroup report={report}/>\n                                </div>\n                            </div>\n                        </div>\n                    );\n                })\n            }\n        </ListGroup>\n    );\n};\n\nexport default ReportList;","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { Jumbotron, Button, Carousel,\n    CarouselItem,\n    CarouselControl,\n    CarouselIndicators,\n    CarouselCaption  } from 'reactstrap';\nimport './Home.css';\nimport { store } from '../../store';\nimport { push } from 'connected-react-router';\n\nconst items = [\n    {\n        id: 1,\n        altText: 'Slide 1',\n        caption: 'Bruce T.',\n        text: 'Physiotherapist',\n        quote: 'Life is so much better now! Really.'\n    },\n    {\n        id: 2,\n        altText: 'Slide 2',\n        caption: 'Claudia S.',\n        text: 'Occupational Therapist',\n        quote: 'It`s fun!'\n    },\n    {\n        id: 3,\n        altText: 'Slide 3',\n        caption: 'Michael T.',\n        text: 'Osteopath',\n        quote: 'I use it every day!'\n    }\n];\n\nclass Disclaimer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { activeIndex: 0 };\n        this.next = this.next.bind(this);\n        this.previous = this.previous.bind(this);\n        this.goToIndex = this.goToIndex.bind(this);\n        this.onExiting = this.onExiting.bind(this);\n        this.onExited = this.onExited.bind(this);\n    }\n\n    onExiting() {\n        this.animating = true;\n    }\n\n    onExited() {\n        this.animating = false;\n    }\n\n    next() {\n        if (this.animating) return;\n        const nextIndex = this.state.activeIndex === items.length - 1 ? 0 : this.state.activeIndex + 1;\n        this.setState({ activeIndex: nextIndex });\n    }\n\n    previous() {\n        if (this.animating) return;\n        const nextIndex = this.state.activeIndex === 0 ? items.length - 1 : this.state.activeIndex - 1;\n        this.setState({ activeIndex: nextIndex });\n    }\n\n    goToIndex(newIndex) {\n        if (this.animating) return;\n        this.setState({ activeIndex: newIndex });\n    }\n\n    goToRegister() {\n        store.dispatch(push('/register'));\n    }\n\n    render() {\n        const {activeIndex} = this.state;\n\n        const slides = items.map((item) => {\n            return (\n                <CarouselItem\n                    onExiting={this.onExiting}\n                    onExited={this.onExited}\n                    key={item.id}\n                    src=\"\"\n                >\n                    <div className=\"custom-tag\">\"{item.quote}\"</div>\n                    <CarouselCaption captionText={item.text} captionHeader={item.caption} />\n                </CarouselItem>\n            );\n        });\n\n        return (\n            <div className=\"container main\">\n                <Jumbotron>\n                    <h1 className=\"display-3\">Create your ICF-Report!</h1>\n                    <p className=\"lead\">Manage patients, reports and ICF-Core-Sets. Save your report\n                        online or generate a Pdf. Make ICF documentation part of your daily work as a therapist\n                        - Become more professional.</p>\n                    <hr className=\"my-2\"/>\n                    <p>No sensitive data has to be saved on the server.</p>\n                    <p className=\"lead\">\n                        <Button color=\"primary\" onClick={this.goToRegister}>Sign up</Button>\n                    </p>\n                </Jumbotron>\n                <Carousel\n                    activeIndex={activeIndex}\n                    next={this.next}\n                    previous={this.previous}\n                >\n                    <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={this.goToIndex} />\n                    {slides}\n                    <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={this.previous} />\n                    <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={this.next} />\n                </Carousel>\n            </div>\n        )\n    }\n}\n\nexport default connect(() => ({}), () => ({}))(Disclaimer);","import React from 'react';\nimport {UncontrolledAlert} from 'reactstrap';\n\nclass ListErrors extends React.Component {\n    render() {\n        const errors = this.props.errors;\n        if (errors) {\n            return (\n                <div>\n                    {\n                        Object.keys(errors).map(key => {\n                            return (\n                                <UncontrolledAlert color=\"danger\" key={key}>\n                                    {key} - {errors[key]}\n                                </UncontrolledAlert>\n                            );\n                        })\n                    }\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default ListErrors;","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport ReportList from './ReportList';\nimport Disclaimer from './Disclaimer';\nimport agent from '../../agent';\nimport {\n    HOME_PAGE_LOADED,\n    HOME_PAGE_UNLOADED\n} from \"../../constants/actionTypes\";\nimport ListErrors from '../ListErrors';\n\nconst mapStateToProps = state => ({\n    reports: state.home.reports,\n    currentUser: state.common.currentUser,\n    errors: state.home.errors\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onLoad: payload => dispatch({type: HOME_PAGE_LOADED, payload}),\n    onUnload: () => dispatch({ type: HOME_PAGE_UNLOADED })\n});\n\nclass Home extends Component {\n\n    componentDidMount() {\n        this.props.onLoad(Promise.all([\n            agent.Report.all()\n        ]));\n    }\n\n    componentWillUnmount() {\n        this.props.onUnload();\n    }\n\n    render() {\n        if (this.props.currentUser) {\n            return (\n                <div className=\"container main\">\n                    <h1>Your ICF Core Sets</h1>\n                    <ListErrors errors={this.props.errors} />\n                    <ReportList reports={this.props.reports} error={this.props.error}/>\n                </div>\n            );\n        } else {\n            return (\n                <Disclaimer/>\n            )\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React, {Component} from 'react';\nimport {Button, Col, Form, FormGroup, Label, Input, Alert} from 'reactstrap';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport ListErrors from './ListErrors';\nimport agent from '../agent';\nimport {\n    UPDATE_FIELD_AUTH,\n    LOGIN,\n    LOGIN_PAGE_UNLOADED\n} from '../constants/actionTypes';\nimport { Redirect } from 'react-router-dom'\n\nconst mapStateToProps = state => ({ ...state.auth });\n\nconst mapDispatchToProps = dispatch => ({\n    onChangeEmail: value =>\n        dispatch({ type: UPDATE_FIELD_AUTH, key: 'email', value }),\n    onChangePassword: value =>\n        dispatch({ type: UPDATE_FIELD_AUTH, key: 'password', value }),\n    onSubmit: (email, password) =>\n        dispatch({ type: LOGIN, payload: agent.Auth.login(email, password) }),\n    onUnload: () =>\n        dispatch({ type: LOGIN_PAGE_UNLOADED })\n});\n\nclass Login extends Component {\n    constructor() {\n        super();\n        this.changeEmail = ev => this.props.onChangeEmail(ev.target.value);\n        this.changePassword = ev => this.props.onChangePassword(ev.target.value);\n        this.submitForm = (email, password) => ev => {\n            ev.preventDefault();\n            this.props.onSubmit(email, password);\n        };\n    }\n\n    componentWillUnmount() {\n        this.props.onUnload();\n    }\n\n    render() {\n        if (this.props.redirectToHome) {\n            return (<Redirect to=\"/\"/>)\n        }\n        const email = this.props.email;\n        const password = this.props.password;\n        return (\n            <div className=\"container main\">\n                <Alert color=\"dark\">\n                    <Link to=\"/register\" className=\"alert-link\">\n                        Need an account?\n                    </Link>\n                </Alert>\n\n                <ListErrors errors={this.props.errors} />\n\n                <Form onSubmit={this.submitForm(email, password)}>\n                    <FormGroup row>\n                        <Label for=\"email\" sm={2}>Email</Label>\n                        <Col sm={10}>\n                            <Input type=\"email\" name=\"email\"\n                                id=\"email\" placeholder=\"Email\"\n                                value={email}\n                                onChange={this.changeEmail}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label for=\"password\" sm={2}>Password</Label>\n                        <Col sm={10}>\n                            <Input type=\"password\" name=\"password\"\n                                id=\"password\" placeholder=\"Password\"\n                                value={password}\n                                onChange={this.changePassword}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup check row>\n                        <Col sm={{size:10, offset:2}}>\n                            <Button type=\"submit\"\n                                disabled={this.props.inProgress}>\n                                Sign in</Button>\n                        </Col>\n                    </FormGroup>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, {Component} from 'react';\nimport {Button, Col, Form, FormGroup, Label, Input, Alert} from 'reactstrap';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport ListErrors from './ListErrors';\nimport agent from '../agent';\nimport {\n    UPDATE_FIELD_AUTH,\n    REGISTER,\n    REGISTER_PAGE_UNLOADED\n} from '../constants/actionTypes';\nimport { Redirect } from 'react-router-dom'\n\nconst mapStateToProps = state => ({ ...state.auth });\n\nconst mapDispatchToProps = dispatch => ({\n    onChangeEmail: value =>\n        dispatch({ type: UPDATE_FIELD_AUTH, key: 'email', value }),\n    onChangePassword: value =>\n        dispatch({ type: UPDATE_FIELD_AUTH, key: 'password', value }),\n    onChangeUsername: value =>\n        dispatch({ type: UPDATE_FIELD_AUTH, key: 'username', value }),\n    onChangeFirstname: value =>\n        dispatch({ type: UPDATE_FIELD_AUTH, key: 'firstname', value }),\n    onChangeLastname: value =>\n        dispatch({ type: UPDATE_FIELD_AUTH, key: 'lastname', value }),\n    onSubmit: (username, email, password, firstname, lastname) => {\n        const payload = agent.Auth.register(username, email, password, firstname, lastname);\n        dispatch({ type: REGISTER, payload })\n    },\n    onUnload: () =>\n        dispatch({ type: REGISTER_PAGE_UNLOADED })\n});\n\nclass Register extends Component {\n    constructor() {\n        super();\n        this.changeEmail = ev => this.props.onChangeEmail(ev.target.value);\n        this.changePassword = ev => this.props.onChangePassword(ev.target.value);\n        this.changeUsername = ev => this.props.onChangeUsername(ev.target.value);\n        this.changeFirstname = ev => this.props.onChangeFirstname(ev.target.value);\n        this.changeLastname = ev => this.props.onChangeLastname(ev.target.value);\n        this.submitForm = (username, email, password, firstname, lastname) => ev => {\n            ev.preventDefault();\n            this.props.onSubmit(username, email, password, firstname, lastname);\n        }\n    }\n\n    componentWillUnmount() {\n        this.props.onUnload();\n    }\n\n    render() {\n        if (this.props.redirectToHome) {\n            return (<Redirect to=\"/\"/>)\n        }\n        const email = this.props.email;\n        const password = this.props.password;\n        const username = this.props.username;\n        const firstname = this.props.firstname;\n        const lastname = this.props.lastname;\n        return (\n            <div className=\"container main\">\n                <Alert color=\"dark\">\n                    <Link to=\"login\" className=\"alert-link\">\n                        Already have an account?\n                    </Link>\n                </Alert>\n\n                <ListErrors errors={this.props.errors} />\n\n                <Form onSubmit={this.submitForm(username, email, password, firstname, lastname)}>\n                    <FormGroup row>\n                        <Label for=\"firstName\" sm={2}>Firstname</Label>\n                        <Col sm={10}>\n                            <Input type=\"text\" name=\"firsName\" id=\"firstName\" placeholder=\"Firstname\"\n                                   value={this.props.firstname}\n                                   onChange={this.changeFirstname}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label for=\"lastName\" sm={2}>Lastname</Label>\n                        <Col sm={10}>\n                            <Input type=\"text\" name=\"lastName\" id=\"lastName\" placeholder=\"Lastname\"\n                                   value={this.props.lastname}\n                                   onChange={this.changeLastname}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label for=\"userName\" sm={2}>Username *</Label>\n                        <Col sm={10}>\n                            <Input type=\"text\" name=\"userName\" id=\"userName\" placeholder=\"Username\"\n                                   value={this.props.username} required\n                                   onChange={this.changeUsername}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label for=\"email\" sm={2}>Email *</Label>\n                        <Col sm={10}>\n                            <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\"\n                                   value={this.props.email} required\n                                   onChange={this.changeEmail}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label for=\"password\" sm={2}>Password *</Label>\n                        <Col sm={10}>\n                            <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\"\n                                   value={this.props.password} required\n                                   onChange={this.changePassword}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label for=\"password\" sm={2}>Retype Password</Label>\n                        <Col sm={10}>\n                            <Input type=\"password\" name=\"re-password\" id=\"re-password\" placeholder=\"Password\" disabled />\n                        </Col>\n                    </FormGroup>\n                    <FormGroup check row>\n                        <Col sm={{size:10, offset:2}}>\n                            <Button\n                                type=\"submit\"\n                                disabled={this.props.inProgress}\n                            >Sign up</Button>\n                        </Col>\n                    </FormGroup>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","export const API_VERSION = '1.0.0';","import React, {Component} from 'react';\nimport './SideNav.css';\nimport {connect} from 'react-redux';\nimport {\n    EDITOR_SIDENAV_LOADED,\n    EDITOR_SIDENAV_UNLOADED,\n    REPORT_SUBMITTED,\n    REPORT_UPLOADED\n} from \"../../constants/actionTypes\";\nimport agent from \"../../agent\";\nimport Moment from \"moment/moment\";\nimport md5 from 'md5';\nimport {API_VERSION} from \"../../constants/config\";\nimport download from '../../utils/downloadPdf';\n\nconst mapStateToProps = state => ({\n    ...state.editor,\n    ...state.editorSideNav\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onLoad: payload =>\n        dispatch({type: EDITOR_SIDENAV_LOADED, payload}),\n    onUnload: () =>\n        dispatch({ type: EDITOR_SIDENAV_UNLOADED }),\n    onSubmit: report =>\n        dispatch({ type: REPORT_SUBMITTED, payload: report }),\n    onUploadReport: report =>\n        dispatch({type: REPORT_UPLOADED, payload: report})\n});\n\nclass SideNav extends Component {\n\n    submitForm = ev => {\n        if (this.props.inProgress) return;\n        ev.preventDefault();\n\n        const report = {\n            type: this.props.type,\n            patientId: this.props.patientId,\n            therapistId: this.props.therapistId,\n            date: this.props.date && Moment(this.props.date).isValid() ? Moment(this.props.date).format('YYYY-MM-DD') : null,\n            freeText: this.props.freeText\n        };\n\n        const promise = this.hasReport ?\n            agent.Report.update(report, this.props.reportId) :\n            agent.Report.create(report);\n        this.props.onSubmit(promise);\n    };\n\n    createPdf = (ev) => {\n        ev.preventDefault();\n\n        const report = {\n            type: this.props.type,\n            patient: {\n                dob: this.props.patient.dob && Moment(this.props.patient.dob).isValid() ? Moment(this.props.patient.dob).format('YYYY-MM-DD') : null,\n                name: this.props.patient.name,\n                surname: this.props.patient.surname,\n                diagnosis: this.props.patient.diagnosis\n            },\n            therapist: this.props.therapist,\n            date: this.props.date && Moment(this.props.date).isValid() ? Moment(this.props.date).format('YYYY-MM-DD') : null,\n            freeText: this.props.freeText,\n            functions: this.props.functions.map(f => {return {...f, code: this.props.codes.find(code => code.id === f.codeId)}}),\n            structures: this.props.structures.map(s => {return {...s, code: this.props.codes.find(code => code.id === s.codeId)}}),\n            activities: this.props.activities.map(a => {return {...a, code: this.props.codes.find(code => code.id === a.codeId)}}),\n            contexts: this.props.contexts.map(c => {return {...c, code: this.props.codes.find(code => code.id === c.codeId)}})\n        };\n\n        agent.Report.getPdf(report)\n            .then((blob) => download(blob));\n    };\n\n    dump = (ev) => {\n        ev.preventDefault();\n\n        const report = {\n            type: this.props.type,\n            patient: {\n                dob: this.props.patient.dob && Moment(this.props.patient.dob).isValid() ? Moment(this.props.patient.dob).format('YYYY-MM-DD') : null,\n                name: this.props.patient.name,\n                surname: this.props.patient.surname,\n                diagnosis: this.props.patient.diagnosis\n            },\n            therapist: this.props.therapist,\n            date: this.props.date && Moment(this.props.date).isValid() ? Moment(this.props.date).format('YYYY-MM-DD') : null,\n            freeText: this.props.freeText,\n            functions: this.props.functions.map(f => {return {...f, code: this.props.codes.find(code => code.id === f.codeId)}}),\n            structures: this.props.structures.map(s => {return {...s, code: this.props.codes.find(code => code.id === s.codeId)}}),\n            activities: this.props.activities.map(a => {return {...a, code: this.props.codes.find(code => code.id === a.codeId)}}),\n            contexts: this.props.contexts.map(c => {return {...c, code: this.props.codes.find(code => code.id === c.codeId)}})\n        };\n        report.hash = md5(JSON.stringify(report));\n        report.version = API_VERSION;\n\n        // download as json\n        const a = document.createElement(\"a\");\n        document.body.appendChild(a);\n        a.style = \"display: none\";\n        const json = JSON.stringify(report),\n            blob = new Blob([json], {type: \"application/json\"}),\n            url = window.URL.createObjectURL(blob);\n        a.href = url;\n        a.download = `${report.patient.surname}_${new Date().getTime()}.json`;\n        a.click();\n\n        window.URL.revokeObjectURL(url);\n        this.props.onUnload();\n    };\n\n    upload = (ev) => {\n        ev.preventDefault();\n        const files = ev.target.files;\n        if (files[0]) {\n            const f = files[0];\n            //Only process json files.\n            if (!f.type.match('application/json')) {\n                return;\n            }\n\n            const reader = new FileReader();\n            // Closure to capture the file information.\n            reader.onload = ((theFile) => {\n                return (e) => {\n                    const report = JSON.parse(e.target.result);\n                    const hash = report.hash;\n                    delete report.hash;\n                    const version = report.version;\n                    delete report.version;\n                    if (md5(JSON.stringify(report)) !== hash)\n                        alert('Report has been tampered with!');\n                    else if (API_VERSION !== version)\n                        alert('Report Format is from another version!');\n                    else\n                        this.props.onUploadReport(report);\n                };\n            })(f);\n\n            // Read in the json file as text.\n            reader.readAsText(f, \"UTF-8\");\n        }\n    };\n\n    componentDidMount() {\n        this.props.onLoad({});\n    }\n\n    componentWillUnmount() {\n        this.props.onUnload();\n    }\n\n    get hasReport() {\n        return this.props.reportId && this.props.reportId !== '';\n    }\n\n    render() {\n        return (\n            <div className=\"sidenav\">\n                <button onClick={this.submitForm.bind(this)} title=\"Save ICF Core Set on Server\">\n                    <i className=\"fa fa-floppy-o\" aria-hidden=\"true\"/></button>\n                <button onClick={this.createPdf.bind(this)} title=\"Create PDF\"><i className=\"fa fa-file-pdf-o\" aria-hidden=\"true\"/></button>\n                <button onClick={this.dump.bind(this)} title=\"Download Report\"><i className=\"fa fa-download\" aria-hidden=\"true\"/></button>\n                <label htmlFor=\"fileInput\" title=\"Upload Report\" className=\"custom-file-upload\"><i className=\"fa fa-upload\" aria-hidden=\"true\"/></label>\n                <input type=\"file\" id=\"fileInput\" onChange={this.upload.bind(this)}/>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SideNav);","import React, {Component} from 'react';\nimport {Row, Col, FormGroup, Label, Input} from 'reactstrap';\nimport {connect} from 'react-redux';\nimport {\n    UPDATE_FIELD_FUNCTION_VALUE\n} from \"../../constants/actionTypes\";\n\nconst mapStateToProps = state => ({\n    ...state,\n    ...state.editor\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onUpdateFieldFunctionValue: (key, value, functionId) =>\n        dispatch({ type: UPDATE_FIELD_FUNCTION_VALUE, key, value, functionId })\n});\n\nclass FunctionValue extends Component {\n    constructor() {\n        super();\n\n        this.handleValueChange = ev => {\n            const val = Number(ev.target.value)\n            this.props.onUpdateFieldFunctionValue('value', val, this.props.funcId);\n        };\n    }\n\n    render() {\n        return (\n            <FormGroup tag=\"fieldset\" className=\"col-md-6\">\n                <Row noGutters={true}>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`severity_${this.props.funcId}`}\n                                       value={0} checked={this.props.value.value === 0}\n                                       onChange={this.handleValueChange}/>{' '}\n                                0\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`severity_${this.props.funcId}`}\n                                       value={1} checked={this.props.value.value === 1}\n                                       onChange={this.handleValueChange}/>{' '}\n                                1\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`severity_${this.props.funcId}`}\n                                       value={2} checked={this.props.value.value === 2}\n                                       onChange={this.handleValueChange}/>{' '}\n                                2\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`severity_${this.props.funcId}`}\n                                       value={3} checked={this.props.value.value === 3}\n                                       onChange={this.handleValueChange}/>{' '}\n                                3\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`severity_${this.props.funcId}`}\n                                       value={4} checked={this.props.value.value === 4}\n                                       onChange={this.handleValueChange}/>{' '}\n                                4\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`severity_${this.props.funcId}`}\n                                       value={8} checked={this.props.value.value === 8}\n                                       onChange={this.handleValueChange}/>{' '}\n                                8\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`severity_${this.props.funcId}`}\n                                       value={9} checked={this.props.value.value === 9}\n                                       onChange={this.handleValueChange}/>{' '}\n                                9\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                </Row>\n            </FormGroup>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FunctionValue);","import React, {Component} from 'react';\nimport {Row, Col, FormGroup, Label, Input} from 'reactstrap';\nimport {connect} from 'react-redux';\nimport {\n    UPDATE_FIELD_STRUCTURE_VALUE\n} from \"../../constants/actionTypes\";\n\nconst mapStateToProps = state => ({\n    ...state,\n    ...state.editor\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onUpdateFieldStructureValue: (key, value, structureId) =>\n        dispatch({ type: UPDATE_FIELD_STRUCTURE_VALUE, key, value, structureId })\n});\n\nclass ContextValue extends Component {\n    constructor() {\n        super();\n\n        const handleValueChange = key => ev =>\n            this.props.onUpdateFieldStructureValue(key, Number(ev.target.value), this.props.funcId);\n        this.changeExtend = handleValueChange('extend');\n        this.changeNature = handleValueChange('nature');\n        this.changeLocation = handleValueChange('location');\n    }\n\n    render() {\n        return (\n            <FormGroup tag=\"fieldset\" className=\"col-md-6\">\n                <Row noGutters={true}>\n                    <Col>\n                        <legend>Extend&nbsp;</legend>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`extend_${this.props.funcId}`}\n                                       value={0} checked={this.props.value.extend === 0}\n                                       onChange={this.changeExtend}/>{' '}\n                                0\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`extend_${this.props.funcId}`}\n                                       value={1} checked={this.props.value.extend === 1}\n                                       onChange={this.changeExtend}/>{' '}\n                                1\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`extend_${this.props.funcId}`}\n                                       value={2} checked={this.props.value.extend === 2}\n                                       onChange={this.changeExtend}/>{' '}\n                                2\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`extend_${this.props.funcId}`}\n                                       value={3} checked={this.props.value.extend === 3}\n                                       onChange={this.changeExtend}/>{' '}\n                                3\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`extend_${this.props.funcId}`}\n                                       value={4} checked={this.props.value.extend === 4}\n                                       onChange={this.changeExtend}/>{' '}\n                                4\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`extend_${this.props.funcId}`}\n                                       value={8} checked={this.props.value.extend === 8}\n                                       onChange={this.changeExtend}/>{' '}\n                                8\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`extend_${this.props.funcId}`}\n                                       value={9} checked={this.props.value.extend === 9}\n                                       onChange={this.changeExtend}/>{' '}\n                                9\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                </Row>\n                <Row noGutters={true}>\n                    <Col>\n                        <legend>Nature&nbsp;</legend>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`nature_${this.props.funcId}`}\n                                       value={0} checked={this.props.value.nature === 0}\n                                       onChange={this.changeNature}/>{' '}\n                                0\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`nature_${this.props.funcId}`}\n                                       value={1} checked={this.props.value.nature === 1}\n                                       onChange={this.changeNature}/>{' '}\n                                1\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`nature_${this.props.funcId}`}\n                                       value={2} checked={this.props.value.nature === 2}\n                                       onChange={this.changeNature}/>{' '}\n                                2\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`nature_${this.props.funcId}`}\n                                       value={3} checked={this.props.value.nature === 3}\n                                       onChange={this.changeNature}/>{' '}\n                                3\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`nature_${this.props.funcId}`}\n                                       value={4} checked={this.props.value.nature === 4}\n                                       onChange={this.changeNature}/>{' '}\n                                4\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`nature_${this.props.funcId}`}\n                                       value={5} checked={this.props.value.nature === 5}\n                                       onChange={this.changeNature}/>{' '}\n                                5\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`nature_${this.props.funcId}`}\n                                       value={6} checked={this.props.value.nature === 6}\n                                       onChange={this.changeNature}/>{' '}\n                                6\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`nature_${this.props.funcId}`}\n                                       value={7} checked={this.props.value.nature === 7}\n                                       onChange={this.changeNature}/>{' '}\n                                7\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`nature_${this.props.funcId}`}\n                                       value={8} checked={this.props.value.nature === 8}\n                                       onChange={this.changeNature}/>{' '}\n                                8\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`nature_${this.props.funcId}`}\n                                       value={9} checked={this.props.value.nature === 9}\n                                       onChange={this.changeNature}/>{' '}\n                                9\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                </Row>\n                <Row noGutters={true}>\n                    <Col>\n                        <legend>Location&nbsp;</legend>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`location_${this.props.funcId}`}\n                                       value={0} checked={this.props.value.location === 0}\n                                       onChange={this.changeLocation}/>{' '}\n                                0\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`location_${this.props.funcId}`}\n                                       value={1} checked={this.props.value.location === 1}\n                                       onChange={this.changeLocation}/>{' '}\n                                1\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`location_${this.props.funcId}`}\n                                       value={2} checked={this.props.value.location === 2}\n                                       onChange={this.changeLocation}/>{' '}\n                                2\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`location_${this.props.funcId}`}\n                                       value={3} checked={this.props.value.location === 3}\n                                       onChange={this.changeLocation}/>{' '}\n                                3\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`location_${this.props.funcId}`}\n                                       value={4} checked={this.props.value.location === 4}\n                                       onChange={this.changeLocation}/>{' '}\n                                4\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`location_${this.props.funcId}`}\n                                       value={5} checked={this.props.value.location === 5}\n                                       onChange={this.changeLocation}/>{' '}\n                                5\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`location_${this.props.funcId}`}\n                                       value={6} checked={this.props.value.location === 6}\n                                       onChange={this.changeLocation}/>{' '}\n                                6\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`location_${this.props.funcId}`}\n                                       value={7} checked={this.props.value.location === 7}\n                                       onChange={this.changeLocation}/>{' '}\n                                7\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`location_${this.props.funcId}`}\n                                       value={8} checked={this.props.value.location === 8}\n                                       onChange={this.changeLocation}/>{' '}\n                                8\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`location_${this.props.funcId}`}\n                                       value={9} checked={this.props.value.location === 9}\n                                       onChange={this.changeLocation}/>{' '}\n                                9\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                </Row>\n            </FormGroup>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContextValue);","import React, {Component} from 'react';\nimport {Row, Col, FormGroup, Label, Input} from 'reactstrap';\nimport {connect} from 'react-redux';\nimport {\n    UPDATE_FIELD_ACTIVITY_VALUE\n} from \"../../constants/actionTypes\";\n\nconst mapStateToProps = state => ({\n    ...state,\n    ...state.editor\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onUpdateFieldActivityValue: (key, value, activityId) =>\n        dispatch({ type: UPDATE_FIELD_ACTIVITY_VALUE, key, value, activityId })\n});\n\nclass ActivityValue extends Component {\n    constructor() {\n        super();\n\n        const handleValueChange = key => ev =>\n            this.props.onUpdateFieldActivityValue(key, Number(ev.target.value), this.props.funcId);\n        this.changePerformance = handleValueChange('performance');\n        this.changeCapacity = handleValueChange('capacity');\n    }\n\n    render() {\n        return (\n            <FormGroup tag=\"fieldset\" className=\"col-md-6\">\n                <Row noGutters={true}>\n                    <Col>\n                        <legend>P</legend>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`performance_${this.props.funcId}`}\n                                       value={0} checked={this.props.value.performance === 0}\n                                       onChange={this.changePerformance}/>{' '}\n                                0\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`performance_${this.props.funcId}`}\n                                       value={1} checked={this.props.value.performance === 1}\n                                       onChange={this.changePerformance}/>{' '}\n                                1\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`performance_${this.props.funcId}`}\n                                       value={2} checked={this.props.value.performance === 2}\n                                       onChange={this.changePerformance}/>{' '}\n                                2\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`performance_${this.props.funcId}`}\n                                       value={3} checked={this.props.value.performance === 3}\n                                       onChange={this.changePerformance}/>{' '}\n                                3\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`performance_${this.props.funcId}`}\n                                       value={4} checked={this.props.value.performance === 4}\n                                       onChange={this.changePerformance}/>{' '}\n                                4\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`performance_${this.props.funcId}`}\n                                       value={8} checked={this.props.value.performance === 8}\n                                       onChange={this.changePerformance}/>{' '}\n                                8\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`performance_${this.props.funcId}`}\n                                       value={9} checked={this.props.value.performance === 9}\n                                       onChange={this.changePerformance}/>{' '}\n                                9\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                </Row>\n                <Row noGutters={true}>\n                    <Col>\n                        <legend>C</legend>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`capacity_${this.props.funcId}`}\n                                       value={0} checked={this.props.value.capacity === 0}\n                                       onChange={this.changeCapacity}/>{' '}\n                                0\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`capacity_${this.props.funcId}`}\n                                       value={1} checked={this.props.value.capacity === 1}\n                                       onChange={this.changeCapacity}/>{' '}\n                                1\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`capacity_${this.props.funcId}`}\n                                       value={2} checked={this.props.value.capacity === 2}\n                                       onChange={this.changeCapacity}/>{' '}\n                                2\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`capacity_${this.props.funcId}`}\n                                       value={3} checked={this.props.value.capacity === 3}\n                                       onChange={this.changeCapacity}/>{' '}\n                                3\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`capacity_${this.props.funcId}`}\n                                       value={4} checked={this.props.value.capacity === 4}\n                                       onChange={this.changeCapacity}/>{' '}\n                                4\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`capacity_${this.props.funcId}`}\n                                       value={8} checked={this.props.value.capacity === 8}\n                                       onChange={this.changeCapacity}/>{' '}\n                                8\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`capacity_${this.props.funcId}`}\n                                       value={9} checked={this.props.value.capacity === 9}\n                                       onChange={this.changeCapacity}/>{' '}\n                                9\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                </Row>\n            </FormGroup>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ActivityValue);","import React, {Component} from 'react';\nimport {Row, Col, FormGroup, Label, Input} from 'reactstrap';\nimport {connect} from 'react-redux';\nimport {\n    UPDATE_FIELD_CONTEXT_VALUE\n} from \"../../constants/actionTypes\";\n\nconst mapStateToProps = state => ({\n    ...state,\n    ...state.editor\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onUpdateFieldContextValue: (key, value, contextId) =>\n        dispatch({ type: UPDATE_FIELD_CONTEXT_VALUE, key, value, contextId })\n});\n\nclass ContextValue extends Component {\n    constructor() {\n        super();\n\n        this.handleValueChange = ev => {\n            const val = Number(ev.target.value)\n            this.props.onUpdateFieldContextValue('value', val, this.props.funcId);\n        };\n    }\n\n    render() {\n        return (\n            <FormGroup tag=\"fieldset\" className=\"col-md-6\">\n                <Row noGutters={true}>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`severity_${this.props.funcId}`}\n                                       value={4} checked={this.props.value.value === 4}\n                                       onChange={this.handleValueChange}/>\n                                +4\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`severity_${this.props.funcId}`}\n                                       value={3} checked={this.props.value.value === 3}\n                                       onChange={this.handleValueChange}/>\n                                +3\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`severity_${this.props.funcId}`}\n                                       value={2} checked={this.props.value.value === 2}\n                                       onChange={this.handleValueChange}/>\n                                +2\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`severity_${this.props.funcId}`}\n                                       value={1} checked={this.props.value.value === 1}\n                                       onChange={this.handleValueChange}/>\n                                +1\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`severity_${this.props.funcId}`}\n                                       value={0} checked={this.props.value.value === 0}\n                                       onChange={this.handleValueChange}/>{' '}\n                                0\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`severity_${this.props.funcId}`}\n                                       value={-1} checked={this.props.value.value === -1}\n                                       onChange={this.handleValueChange}/>{' '}\n                                1\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`severity_${this.props.funcId}`}\n                                       value={-2} checked={this.props.value.value === -2}\n                                       onChange={this.handleValueChange}/>{' '}\n                                2\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`severity_${this.props.funcId}`}\n                                       value={-3} checked={this.props.value.value === -3}\n                                       onChange={this.handleValueChange}/>{' '}\n                                3\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`severity_${this.props.funcId}`}\n                                       value={-4} checked={this.props.value.value === -4}\n                                       onChange={this.handleValueChange}/>{' '}\n                                4\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`severity_${this.props.funcId}`}\n                                       value={8} checked={this.props.value.value === 8}\n                                       onChange={this.handleValueChange}/>{' '}\n                                8\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name={`severity_${this.props.funcId}`}\n                                       value={9} checked={this.props.value.value === 9}\n                                       onChange={this.handleValueChange}/>{' '}\n                                9\n                            </Label>\n                        </FormGroup>\n                    </Col>\n                </Row>\n            </FormGroup>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContextValue);","let lastId = 0;\n\nexport default function(prefix='id') {\n    lastId++;\n    return `${prefix}${lastId}`;\n}","import React, {Component} from 'react';\nimport {Row, Col, FormGroup, Label, Input, Card, CardBody} from 'reactstrap';\nimport FunctionValue from './FunctionValue';\nimport StructureValue from './StructureValue';\nimport ActivityValue from './ActivityValue';\nimport ContextValue from './ContextValue';\nimport {connect} from 'react-redux';\nimport {\n    DELETE_FUNCTION,\n    DELETE_STRUCTURE,\n    DELETE_ACTIVITY,\n    DELETE_CONTEXT,\n    UPDATE_FIELD_FUNCTION,\n    UPDATE_FIELD_STRUCTURE,\n    UPDATE_FIELD_ACTIVITY,\n    UPDATE_FIELD_CONTEXT\n} from \"../../constants/actionTypes\";\nimport agent from \"../../agent\";\nimport newId from '../../utils/newId';\n\nconst mapStateToProps = state => ({\n    ...state,\n    ...state.editor\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onDeleteFunction: (payload, functionId) =>\n        dispatch({ type: DELETE_FUNCTION, payload, functionId }),\n    onDeleteStructure: (payload, structureId) =>\n        dispatch({ type: DELETE_STRUCTURE, payload, structureId }),\n    onDeleteActivity: (payload, activityId) =>\n        dispatch({ type: DELETE_ACTIVITY, payload, activityId }),\n    onDeleteContext: (payload, contextId) =>\n        dispatch({ type: DELETE_CONTEXT, payload, contextId }),\n    onUpdateFieldFunction: (key, value, functionId) =>\n        dispatch({ type: UPDATE_FIELD_FUNCTION, key, value, functionId }),\n    onUpdateFieldStructure: (key, value, structureId) =>\n        dispatch({ type: UPDATE_FIELD_STRUCTURE, key, value, structureId }),\n    onUpdateFieldActivity: (key, value, activityId) =>\n        dispatch({ type: UPDATE_FIELD_ACTIVITY, key, value, activityId }),\n    onUpdateFieldContext: (key, value, contextId) =>\n        dispatch({ type: UPDATE_FIELD_CONTEXT, key, value, contextId })\n});\n\nconst ValueElement = props => {\n    switch (props.kind) {\n        case 'FUNCTION':\n            return (\n                <FunctionValue value={props.value} funcId={props.funcId}/>\n            );\n        case 'STRUCTURE':\n            return (\n                <StructureValue value={props.value} funcId={props.funcId}/>\n            );\n        case 'ACTIVITY':\n            return (\n                <ActivityValue value={props.value} funcId={props.funcId}/>\n            );\n        case 'CONTEXT':\n            return (\n                <ContextValue value={props.value} funcId={props.funcId}/>\n            );\n        default:\n            return null;\n    }\n};\n\nclass FunctionElement extends Component {\n    constructor() {\n        super();\n\n        this.removeFunction = () => {\n            let payload = null;\n            if (this.props.func.id >= 0) {\n                payload = agent.Function.remove(this.props.reportId, this.props.func.id);\n            }\n            switch (this.props.kind) {\n                case 'FUNCTION':\n                    this.props.onDeleteFunction(payload, this.props.func.id);\n                    break;\n                case 'STRUCTURE':\n                    this.props.onDeleteStructure(payload, this.props.func.id);\n                    break;\n                case 'ACTIVITY':\n                    this.props.onDeleteActivity(payload, this.props.func.id);\n                    break;\n                case 'CONTEXT':\n                    this.props.onDeleteContext(payload, this.props.func.id);\n                    break;\n                default:\n            }\n        };\n\n        const updateFieldEvent =\n            key => ev => {\n                switch (this.props.kind) {\n                    case 'FUNCTION':\n                        this.props.onUpdateFieldFunction(key, ev.target.value, this.props.func.id);\n                        break;\n                    case 'STRUCTURE':\n                        this.props.onUpdateFieldStructure(key, ev.target.value, this.props.func.id);\n                        break;\n                    case 'ACTIVITY':\n                        this.props.onUpdateFieldActivity(key, ev.target.value, this.props.func.id);\n                        break;\n                    case 'CONTEXT':\n                        this.props.onUpdateFieldContext(key, ev.target.value, this.props.func.id);\n                        break;\n                    default:\n                }\n            };\n        this.changeCodeId = updateFieldEvent('codeId').bind(this);\n        this.changeDescription = updateFieldEvent('description').bind(this);\n    }\n\n    getCodeFromId = codeId => {\n        const empty = {\n            title: 'Empty  Title',\n            description: 'Empty Description'\n        };\n        if (this.props.codes && this.props.codes.length > 0) {\n            const found = this.props.codes.find(c => c.id === codeId);\n            return found !== undefined ? found : empty;\n        }else {\n            return empty;\n        }\n    };\n\n    toggleCheckbox = ev => {\n        const sourceOfInfo = this.props.func.sourceOfInfo;\n        if (sourceOfInfo) {\n            const labelIndex = sourceOfInfo.findIndex(item => item === ev.target.value);\n            if (labelIndex === -1)\n                sourceOfInfo.push(ev.target.value);\n            else\n                sourceOfInfo.splice(labelIndex, 1);\n            switch (this.props.kind) {\n                case 'FUNCTION':\n                    this.props.onUpdateFieldFunction('sourceOfInfo', sourceOfInfo, this.props.func.id);\n                    break;\n                case 'STRUCTURE':\n                    this.props.onUpdateFieldStructure('sourceOfInfo', sourceOfInfo, this.props.func.id);\n                    break;\n                case 'ACTIVITY':\n                    this.props.onUpdateFieldActivity('sourceOfInfo', sourceOfInfo, this.props.func.id);\n                    break;\n                case 'CONTEXT':\n                    this.props.onUpdateFieldContext('sourceOfInfo', sourceOfInfo, this.props.func.id);\n                    break;\n                default:\n            }\n        }\n    };\n\n    isCheckboxChecked = label => {\n        if (this.props.func.sourceOfInfo) {\n            return this.props.func.sourceOfInfo.find(item => item === label) !== undefined;\n        }\n        return false;\n    };\n\n    collapse = ev => {\n        const i = ev.target.tagName.toUpperCase() === 'I' ? ev.target : ev.target.getElementsByTagName('i')[0];\n        const style = document.getElementById(`detailed--info__${this.props.func.id}`).style;\n        if (i.className.includes('down')) {\n            style.display = 'block';\n            i.className = i.className.replace('down', 'up');\n        } else {\n            style.display = 'none';\n            i.className = i.className.replace('up', 'down');\n        }\n    };\n\n    componentDidMount() {\n        this.codeId = newId('code');\n        this.descriptionId = newId('description');\n    }\n\n    render() {\n        const codes = [(<option key={-1} value={null}>Choose...</option>)];\n        if (this.props.codes) {\n            codes.push(...this.props.codes.map(code => {\n                return (\n                    <option key={code.id} value={code.id}>{code.code}</option>\n                )\n            }));\n        }\n        return (\n            <Row className=\"function--element\">\n                <Col>\n                    <Card className=\"function--card\">\n                        <CardBody>\n                        <div className=\"d-flex justify-content-end\">\n                            <button type=\"button\" className=\"close\" title=\"remove\" aria-label=\"Close\"\n                                    onClick={this.removeFunction.bind(this)}>\n                                <i className=\"fa fa-times\" aria-hidden=\"true\"/>\n                            </button>\n                        </div>\n                            <Row className=\"function--value\">\n                                <FormGroup className=\"col-md-2\">\n                                    <Label for=\"code\" hidden>Code</Label>\n                                    <Input type=\"select\" name=\"codeId\" id={this.codeId}\n                                           value={this.props.func.codeId}\n                                           onChange={this.changeCodeId}>\n                                        {codes}\n                                    </Input>\n                                </FormGroup>\n                                <span className=\"col-md-4\">{this.getCodeFromId(this.props.func.codeId).title}</span>\n                                <ValueElement kind={this.props.kind} value={this.props.func.value} funcId={this.props.func.id}/>\n                            </Row>\n\n                            <div className=\"d-flex justify-content-end\">\n                                <button type=\"button\" className=\"close\" title=\"toggle\" aria-label=\"Close\"\n                                        onClick={this.collapse}>\n                                    <i className=\"fa fa-angle-double-down\" aria-hidden=\"true\"/>\n                                </button>\n                            </div>\n                            <div id={`detailed--info__${this.props.func.id}`}>\n                                <Row className=\"function--info\">\n                                    <Col>\n                                        <Row>\n                                            <Col><b>{this.getCodeFromId(this.props.func.codeId).description}</b></Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>Inclusions, Exclusions tbd</Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n\n                                <FormGroup tag=\"fieldset\" row className=\"function--sources\">\n                                    <Col>\n                                        <Row>\n                                            <Col>\n                                                <legend>Sources of information</legend>\n                                            </Col>\n                                        </Row>\n                                        <Row noGutters={false}>\n                                            <Col xs=\"auto\">\n                                                <FormGroup check>\n                                                    <Label check>\n                                                        <Input type=\"checkbox\"\n                                                               value=\"Case history\"\n                                                               defaultChecked={this.isCheckboxChecked(\"Case history\")}\n                                                               onChange={this.toggleCheckbox}/>{' '}\n                                                        Case history\n                                                    </Label>\n                                                </FormGroup>\n                                            </Col>\n                                            <Col xs=\"auto\">\n                                                <FormGroup check>\n                                                    <Label check>\n                                                        <Input type=\"checkbox\"\n                                                               value=\"Patient reported questionnaire\"\n                                                               defaultChecked={this.isCheckboxChecked(\"Patient reported questionnaire\")}\n                                                               onChange={this.toggleCheckbox}/>{' '}\n                                                        Patient reported questionnaire\n                                                    </Label>\n                                                </FormGroup>\n                                            </Col>\n                                            <Col xs=\"auto\">\n                                                <FormGroup check>\n                                                    <Label check>\n                                                        <Input type=\"checkbox\"\n                                                               value=\"Clinical examination\"\n                                                               defaultChecked={this.isCheckboxChecked(\"Clinical examination\")}\n                                                               onChange={this.toggleCheckbox}/>{' '}\n                                                        Clinical examination\n                                                    </Label>\n                                                </FormGroup>\n                                            </Col>\n                                            <Col xs=\"auto\">\n                                                <FormGroup check>\n                                                    <Label check>\n                                                        <Input type=\"checkbox\"\n                                                               value=\"Technical investigation\"\n                                                               defaultChecked={this.isCheckboxChecked(\"Technical investigation\")}\n                                                               onChange={this.toggleCheckbox}/>{' '}\n                                                        Technical investigation\n                                                    </Label>\n                                                </FormGroup>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </FormGroup>\n                            </div>\n\n                            <FormGroup row className=\"function--description\">\n                                <Col>\n                                    <Row>\n                                        <Col>\n                                            <Label for=\"description\">Description of the problem</Label>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Input type=\"text\" name=\"description\" id={this.descriptionId}\n                                                placeholder=\"Description\"\n                                                value={this.props.func.description}\n                                                onChange={this.changeDescription}/>\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            </FormGroup>\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FunctionElement);","import React from 'react';\nimport {ListGroup} from 'reactstrap';\nimport FunctionElement from './FunctionElement';\n\nconst FunctionList = props => {\n    //console.log('functionlist', props)\n    if(props.error) {\n        //console.log(props.error)\n        return (\n            <div>Error {props.error}</div>\n        )\n    }\n    if (!props.functions) {\n        return (\n            <div className=\"function-preview\">Loading...</div>\n        );\n    }\n\n    if (props.functions.length === 0) {\n        return (\n            <div className=\"function-preview\">\n                No functions are here... yet.\n            </div>\n        );\n    }\n\n    return (\n        <ListGroup>\n            {\n                props.functions.map(func => {\n                    return (\n                        <FunctionElement kind={props.kind} key={func.id} func={func}/>\n                    );\n                })\n            }\n        </ListGroup>\n    );\n};\n\nexport default FunctionList;","import React, {Component} from 'react';\nimport {Col, FormGroup, Label, Input, Card, CardBody, CardHeader} from 'reactstrap';\nimport Moment from 'moment';\nimport momentLocalizer from 'react-widgets-moment';\nimport {DateTimePicker} from 'react-widgets';\nimport {connect} from 'react-redux';\nimport {\n    UPDATE_FIELD_REPORT_PATIENT\n} from \"../../constants/actionTypes\";\nimport newId from '../../utils/newId';\n\nMoment.locale('de');\nmomentLocalizer();\n\nconst mapStateToProps = state => ({\n    ...state.editor.patient\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onUpdateField: (key, value) =>\n        dispatch({ type: UPDATE_FIELD_REPORT_PATIENT, key, value })\n});\n\nclass PatientElement extends Component {\n    constructor() {\n        super();\n\n        const updateFieldEvent =\n            key => ev => this.props.onUpdateField(key, ev.target.value);\n        this.changeName = updateFieldEvent('name');\n        this.changeSurname = updateFieldEvent('surname');\n        this.changeDiagnosis = updateFieldEvent('diagnosis');\n        this.changeDob = ev => {\n            this.props.onUpdateField('dob', ev);\n        };\n    }\n\n    componentDidMount() {\n        this.nameId = newId('name');\n        this.surnameId = newId('surname');\n    }\n\n    render() {\n        return (\n            <Card>\n                <CardHeader>Patient</CardHeader>\n                <CardBody>\n                    <FormGroup row>\n                        <Label for=\"firstName\" sm={2}>Name</Label>\n                        <Col sm={10}>\n                            <Input type=\"text\" name=\"name\" id={this.nameId} placeholder=\"Name\"\n                                   value={this.props.name}\n                                   onChange={this.changeName}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label for=\"surname\" sm={2}>Surname</Label>\n                        <Col sm={10}>\n                            <Input type=\"text\" name=\"surname\" id={this.surnameId} placeholder=\"Surname\"\n                                   value={this.props.surname}\n                                   onChange={this.changeSurname}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label for=\"diagnosis\" sm={2}>Diagnosis</Label>\n                        <Col sm={10}>\n                            <Input type=\"text\" name=\"diagnosis\" id=\"diagnosis\" placeholder=\"Diagnosis\"\n                                   value={this.props.diagnosis}\n                                   onChange={this.changeDiagnosis}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label for=\"dob\" sm={2}>Date of birth</Label>\n                        <Col sm={10}>\n                            <DateTimePicker\n                                name=\"dob\" id=\"dob\"\n                                format='DD.MM.YYYY'\n                                time={false}\n                                value={this.props.dob}\n                                onChange={this.changeDob}\n                                placeholder=\"dd.mm.yyyy\"\n                            />\n                        </Col>\n                    </FormGroup>\n                </CardBody>\n            </Card>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PatientElement);","import React, {Component} from 'react';\nimport {Col, FormGroup, Label, Input, Card, CardBody, CardHeader} from 'reactstrap';\nimport {connect} from 'react-redux';\nimport {\n    UPDATE_FIELD_REPORT_THERAPIST\n} from \"../../constants/actionTypes\";\nimport newId from '../../utils/newId';\n\nconst mapStateToProps = state => ({\n    ...state.editor.therapist\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onUpdateField: (key, value) =>\n        dispatch({ type: UPDATE_FIELD_REPORT_THERAPIST, key, value })\n});\n\nclass TherapistElement extends Component {\n    constructor() {\n        super();\n\n        const updateFieldEvent =\n            key => ev => this.props.onUpdateField(key, ev.target.value);\n        this.changeName = updateFieldEvent('name');\n        this.changeSurname = updateFieldEvent('surname');\n        this.changeCompany = updateFieldEvent('company');\n    }\n\n    componentDidMount() {\n        this.nameId = newId('name');\n        this.surnameId = newId('surname');\n    }\n\n    render() {\n        return (\n            <Card>\n                <CardHeader>Therapist</CardHeader>\n                <CardBody>\n                    <FormGroup row>\n                        <Label for=\"firstName\" sm={2}>Name</Label>\n                        <Col sm={10}>\n                            <Input type=\"text\" name=\"name\" id={this.nameId} placeholder=\"Name\"\n                                   value={this.props.name}\n                                   onChange={this.changeName}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label for=\"surname\" sm={2}>Surname</Label>\n                        <Col sm={10}>\n                            <Input type=\"text\" name=\"surname\" id={this.surnameId} placeholder=\"Surname\"\n                                   value={this.props.surname}\n                                   onChange={this.changeSurname}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label for=\"company\" sm={2}>Company</Label>\n                        <Col sm={10}>\n                            <Input type=\"text\" name=\"company\" id=\"company\" placeholder=\"Company\"\n                                   value={this.props.company}\n                                   onChange={this.changeCompany}/>\n                        </Col>\n                    </FormGroup>\n                </CardBody>\n            </Card>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TherapistElement);","import React, {Component} from 'react';\nimport {Row, Col, Form, FormGroup, Label, Input} from 'reactstrap';\nimport {connect} from 'react-redux';\nimport Moment from 'moment';\nimport momentLocalizer from 'react-widgets-moment';\nimport {DateTimePicker} from 'react-widgets';\nimport './Editor.css';\nimport SideNav from './SideNav';\nimport FunctionList from './FunctionList';\nimport agent from '../../agent';\nimport ListErrors from '../ListErrors';\nimport PatientElement from './PatientElement';\nimport TherapistElement from './TherapistElement';\nimport {\n    EDITOR_PAGE_LOADED,\n    EDITOR_PAGE_UNLOADED,\n    UPDATE_FIELD_REPORT,\n    FUNCTION_ADDED,\n    STRUCTURE_ADDED,\n    ACTIVITY_ADDED,\n    CONTEXT_ADDED,\n    FUNCTION_SUBMITTED\n} from \"../../constants/actionTypes\";\n\nMoment.locale('de');\nmomentLocalizer();\n\nconst mapStateToProps = state => ({\n    ...state.editor,\n    sideNav: state.editorSideNav\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onLoad: payload =>\n        dispatch({type: EDITOR_PAGE_LOADED, payload}),\n    onUnload: () =>\n        dispatch({ type: EDITOR_PAGE_UNLOADED }),\n\tonUpdateField: (key, value) =>\n\t\tdispatch({ type: UPDATE_FIELD_REPORT, key, value }),\n    onSubmitFunction: payload =>\n        dispatch({type: FUNCTION_SUBMITTED, payload}),\n    onAddFunction: func =>\n        dispatch({type: FUNCTION_ADDED, func: func}),\n    onAddStructure: struc =>\n        dispatch({type: STRUCTURE_ADDED, struc: struc}),\n    onAddActivity: act =>\n        dispatch({type: ACTIVITY_ADDED, act: act}),\n    onAddContext: con =>\n        dispatch({type: CONTEXT_ADDED, con: con}),\n});\n\nclass Editor extends Component {\n\t\n\tconstructor() {\n\t\tsuper();\n\t\t\n\t\tconst updateFieldEvent =\n\t\t\tkey => ev => this.props.onUpdateField(key, ev.target.value);\n\t\tthis.changeType = updateFieldEvent('type');\n\t\tthis.changeFreeText = updateFieldEvent('freeText');\n\t\tthis.changeDate = ev => {\n\t\t\tthis.props.onUpdateField('date', ev);\n\t\t};\n\n        this.addFunction = (type) => {\n            const obj = {\n                id: -1 * Math.floor((Math.random() * 1000) + 1),\n                code: {\n                    id: -1\n                },\n                codeId: -1,\n                description: '',\n                value: {\n                    value: NaN,\n                    performance: NaN,\n                    capacity: NaN,\n                    extend: NaN,\n                    nature: NaN,\n                    location: NaN\n                },\n                sourceOfInfo: [],\n                kind: type\n            };\n            switch (type) {\n                case 'FUNCTION':\n                    this.props.onAddFunction(obj);\n                    break;\n                case 'STRUCTURE':\n                    this.props.onAddStructure(obj);\n                    break;\n                case 'ACTIVITY':\n                    this.props.onAddActivity(obj);\n                    break;\n                case 'CONTEXT':\n                    this.props.onAddContext(obj);\n                    break;\n                default:\n            }\n        };\n\t}\n\t\n\tcomponentDidUpdate(prevProps) {\n\t\tif (this.props.newReport) { \n            // successful update/insert\n            this.props.functions.forEach(func => {\n               this.updateFunctions(this.props.newReport.id, func);\n            });\n            this.props.structures.forEach(struc => {\n                this.updateFunctions(this.props.newReport.id, struc);\n            });\n            this.props.activities.forEach(act => {\n                this.updateFunctions(this.props.newReport.id, act);\n            });\n            this.props.contexts.forEach(con => {\n                this.updateFunctions(this.props.newReport.id, con);\n            });\n        }\n\t\tif (prevProps.match.params.id !== this.props.match.params.id) {\n            // router url param :id has changed\n\t\t\tconst promises = [\n\t\t\t\tagent.Code.all()\n\t\t\t];\n\t\t\tif (this.props.match.params.id) {\n\t\t\t\tpromises.push(agent.Report.get(this.props.match.params.id));\n\t\t\t}\n\t\t\tthis.props.onUnload();\n\t\t\tthis.props.onLoad(Promise.all(promises));\n\t\t}\n\t}\n\n    updateFunctions(reportId, func) {\n        if (func.id <= 0) {\n            this.props.onSubmitFunction(agent.Function.create(reportId, func));\n        }\n        else if (func.hasOwnProperty('isDirty') && func.isDirty) {\n            this.props.onSubmitFunction(agent.Function.update(reportId, func, func.id));\n        }\n    }\n\n    componentDidMount() {\n\t\tconst promises = [\n\t\t\tagent.Code.all()\n\t\t];\n\t\tif (this.props.match.params.id) {\n            // router url param :id\n            promises.push(agent.Report.get(this.props.match.params.id));\n            promises.push(agent.Function.all(this.props.match.params.id, 'FUNCTION'));\n            promises.push(agent.Function.all(this.props.match.params.id, 'STRUCTURE'));\n            promises.push(agent.Function.all(this.props.match.params.id, 'ACTIVITY'));\n            promises.push(agent.Function.all(this.props.match.params.id, 'CONTEXT'));\n        }\n\t\tthis.props.onLoad(Promise.all(promises));\n    }\n\n    componentWillUnmount() {\n        this.props.onUnload();\n    }\n    \n    get hasReport() {\n        return this.props.reportId && this.props.reportId !== -1;\n    }\n    \n    render() {\n        return (\n            <div className=\"container main\">\n                <SideNav/>\n                <h1>{this.hasReport ? 'Update Report' : 'Create A New Report'}</h1>\n                <Form className=\"reportForm\">\n                    <ListErrors errors={this.props.errors} />\n                    <ListErrors errors={this.props.sideNav.errors} />\n                    <FormGroup row>\n                        <Label for=\"type\" sm={2}>Type</Label>\n                        <Col sm={10}>\n                            <Input type=\"text\" name=\"type\" id=\"type\" placeholder=\"Type\"\n                                   value={this.props.type}\n                                   onChange={this.changeType}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label for=\"date\" sm={2}>Date</Label>\n                        <Col sm={10}>\n                            <DateTimePicker\n                                name=\"date\" id=\"date\"\n                                format='DD.MM.YYYY'\n                                time={false}\n                                placeholder=\"dd.mm.yyyy\"\n                                value={this.props.date}\n                                onChange={this.changeDate}\n                            />\n                        </Col>\n                    </FormGroup>\n                    <PatientElement row/>\n                    <TherapistElement row/>\n                    <hr/>\n\n                    <section>\n                        <Row className=\"justify-content-between function--heading\">\n                            <h5>Body Functions</h5>\n                            <button type=\"button\" className=\"close\" title=\"add\" aria-label=\"Add\"\n                                onClick={() => this.addFunction('FUNCTION')}>\n                                <i className=\"fa fa-plus\" aria-hidden=\"true\"/>\n                            </button>\n                        </Row>\n                        <FunctionList functions={this.props.functions} kind=\"FUNCTION\"/>\n                    </section>\n                    <section>\n                        <Row className=\"justify-content-between function--heading\">\n                            <h5>Body Structures</h5>\n                            <button type=\"button\" className=\"close\" title=\"add\" aria-label=\"Add\"\n                                    onClick={() => this.addFunction('STRUCTURE')}>\n                                <i className=\"fa fa-plus\" aria-hidden=\"true\"/>\n                            </button>\n                        </Row>\n                        <FunctionList functions={this.props.structures} kind=\"STRUCTURE\"/>\n                    </section>\n                    <section>\n                        <Row className=\"justify-content-between function--heading\">\n                            <h5>Activities and Participation</h5>\n                            <button type=\"button\" className=\"close\" title=\"add\" aria-label=\"Add\"\n                                    onClick={() => this.addFunction('ACTIVITY')}>\n                                <i className=\"fa fa-plus\" aria-hidden=\"true\"/>\n                            </button>\n                        </Row>\n                        <FunctionList functions={this.props.activities} kind=\"ACTIVITY\"/>\n                    </section>\n                    <section>\n                        <Row className=\"justify-content-between function--heading\">\n                            <h5>Context Factors</h5>\n                            <button type=\"button\" className=\"close\" title=\"add\" aria-label=\"Add\"\n                                    onClick={() => this.addFunction('CONTEXT')}>\n                                <i className=\"fa fa-plus\" aria-hidden=\"true\"/>\n                            </button>\n                        </Row>\n                        <FunctionList functions={this.props.contexts} kind=\"CONTEXT\"/>\n                    </section>\n\n                    <hr/>\n                    <FormGroup row className=\"editor--freetext\">\n                        <Label for=\"freeText\" sm={2}>Free Text</Label>\n                        <Col sm={10}>\n                            <Input type=\"textarea\" name=\"freeText\" id=\"freeText\"\n                                   placeholder=\"Further description...\"\n                                   value={this.props.freeText}\n                                   onChange={this.changeFreeText}/>\n                        </Col>\n                    </FormGroup>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Editor);","import ListErrors from './ListErrors';\nimport React, {Component} from 'react';\nimport agent from '../agent';\nimport { connect } from 'react-redux';\nimport {Button, Col, Form, FormGroup, Label, Input} from 'reactstrap';\nimport {\n    SETTINGS_SAVED,\n    SETTINGS_PAGE_UNLOADED,\n    LOGOUT\n} from '../constants/actionTypes';\n\nconst mapStateToProps = state => ({\n    ...state.settings,\n    currentUser: state.common.currentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onClickLogout: () => dispatch({ type: LOGOUT }),\n    onSubmitForm: user =>\n        dispatch({ type: SETTINGS_SAVED, payload: user }),\n    onUnload: () => dispatch({ type: SETTINGS_PAGE_UNLOADED })\n});\n\nclass Settings extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            newUser: {\n                firstname: '',\n                lastname: '',\n                username: '',\n                email: '',\n            }\n        }\n\n        this.updateState = ev => {\n            const tempUser = this.state.newUser;\n            Object.assign(tempUser, {[ev.target.name]: ev.target.value})\n            this.setState({ newUser: tempUser });\n        };\n\n        this.submitForm.bind(this);\n    }\n\n    submitForm = ev => {\n        ev.preventDefault();\n        this.props.onSubmitForm(agent.Auth.save(this.state.newUser));\n    };\n\n    componentDidMount() {\n        this.setState({ newUser: {\n            firstname: this.props.currentUser.firstname || '',\n            lastname: this.props.currentUser.lastname || '',\n            username: this.props.currentUser.username || '',\n            email: this.props.currentUser.email || ''\n         }\n        });\n      }\n\n    render() {\n        return (\n            <div className=\"container main\">\n                <h1>Your Settings</h1>\n\n                <ListErrors errors={this.props.errors} />\n\n                <Form onSubmit={this.submitForm} className=\"form--settings\">\n                <FormGroup row>\n                    <Label for=\"firstName\" sm={2}>Firstname</Label>\n                    <Col sm={10}>\n                        <Input type=\"text\" name=\"firstname\"\n                               id=\"firstName\" placeholder=\"Firstname\"\n                               value={this.state.newUser.firstname}\n                               onChange={this.updateState}/>\n                    </Col>\n                </FormGroup>\n                <FormGroup row>\n                    <Label for=\"lastName\" sm={2}>Lastname</Label>\n                    <Col sm={10}>\n                        <Input type=\"text\" name=\"lastname\"\n                               value={this.state.newUser.lastname}\n                               onChange={this.updateState}\n                               id=\"lastName\" placeholder=\"Lastname\"/>\n                    </Col>\n                </FormGroup>\n                <FormGroup row>\n                    <Label for=\"userName\" sm={2}>Username</Label>\n                    <Col sm={10}>\n                        <Input type=\"text\" name=\"username\"\n                               value={this.state.newUser.username}\n                               onChange={this.updateState}\n                               id=\"userName\" placeholder=\"Username\"/>\n                    </Col>\n                </FormGroup>\n                <FormGroup row>\n                    <Label for=\"email\" sm={2}>Email</Label>\n                    <Col sm={10}>\n                        <Input type=\"email\" name=\"email\"\n                               value={this.state.newUser.email}\n                               onChange={this.updateState}\n                               id=\"email\" placeholder=\"Email\" />\n                    </Col>\n                </FormGroup>\n                <FormGroup row>\n                    <Label for=\"password\" sm={2}>New Password</Label>\n                    <Col sm={10}>\n                        <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" disabled />\n                    </Col>\n                </FormGroup>\n                <FormGroup row>\n                    <Label for=\"password\" sm={2}>Retype Password</Label>\n                    <Col sm={10}>\n                        <Input type=\"password\" name=\"re-password\" id=\"re-password\" placeholder=\"Password\" disabled />\n                    </Col>\n                </FormGroup>\n                <FormGroup check row>\n                    <Col sm={{size:10, offset:2}}>\n                        <Button color=\"primary\" type=\"submit\" disabled={this.props.inProgress}>\n                            Save\n                        </Button>\n                    </Col>\n                </FormGroup>\n            </Form>\n\n                <hr />\n                <Button color=\"danger\" onClick={this.props.onClickLogout}>Or click here to logout.</Button>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);","import React from 'react';\nimport agent from '../../agent';\nimport { Button } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { DELETE_CODE } from '../../constants/actionTypes';\n\nconst mapDispatchToProps = dispatch => ({\n    onClick: (payload, codeId) =>\n        dispatch({ type: DELETE_CODE, payload, codeId })\n});\n\nconst CodeDeleteButton = props => {\n    const del = ev => {\n        ev.stopPropagation();\n        ev.nativeEvent.stopImmediatePropagation();\n        const payload = agent.Code.remove(props.codeId);\n        props.onClick(payload, props.codeId);\n    };\n\n    return (\n        <Button type=\"button\" outline color=\"danger\"\n                onClick={(ev) => del(ev)}>Remove</Button>\n    );\n};\n\nexport default connect(() => ({}), mapDispatchToProps)(CodeDeleteButton);","import React from 'react';\nimport {ListGroup} from 'reactstrap';\nimport CodeDeleteButton from './CodeDeleteButton';\nimport { connect } from 'react-redux';\nimport {CODE_EDITOR_PAGE_TOGGLED} from '../../constants/actionTypes';\n\nconst mapDispatchToProps = dispatch => ({\n    onClick: codeId =>\n        dispatch({ type: CODE_EDITOR_PAGE_TOGGLED, codeId })\n});\n\nconst CodeList = props => {\n    //console.log('codelist', props)\n    if(props.error) {\n        //console.log(props.error)\n        return (\n            <div>Error {props.error}</div>\n        )\n    }\n    if (!props.codes) {\n        return (\n            <div className=\"code-preview\">Loading...</div>\n        );\n    }\n\n    if (props.codes.length === 0) {\n        return (\n            <div className=\"code-preview\">\n                No codes are here... yet.\n            </div>\n        );\n    }\n\n    return (\n        <ListGroup>\n            {\n                props.codes.map(code => {\n                    return (\n                        <div className=\"list-group-item list-group-item-action flex-column align-items-start\"\n                             key={code.id} onClick={() => props.onClick(code.id)}>\n                            <div className=\"d-flex w-100 justify-content-between\">\n                                <h5 className=\"mb-1\">{code.code}</h5>\n                            </div>\n                            <div className=\"d-flex w-100 justify-content-between\">\n                                <p className=\"mb-1\">{code.title} - {code.description}</p>\n                                <CodeDeleteButton codeId={code.id}/>\n                            </div>\n                        </div>\n                    );\n                })\n            }\n        </ListGroup>\n    );\n};\n\nexport default connect(() => ({}), mapDispatchToProps)(CodeList);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport agent from '../../agent';\nimport ListErrors from '../ListErrors';\nimport {Button, Col, Form, FormGroup, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\nimport {\n    CODE_FORM_PAGE_LOADED,\n    CODE_FORM_PAGE_UNLOADED,\n    CODE_EDITOR_PAGE_TOGGLED,\n    CODE_SUBMITTED,\n    CODE_ADDED,\n    CODE_UPDATED\n} from \"../../constants/actionTypes\";\n\nconst mapStateToProps = state => ({\n    ...state.codeForm\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onLoad: payload =>\n        dispatch({type: CODE_FORM_PAGE_LOADED, payload}),\n    onUnload: () =>\n        dispatch({type: CODE_FORM_PAGE_UNLOADED}),\n    onToggle: () =>\n        dispatch({type: CODE_EDITOR_PAGE_TOGGLED}),\n    onSubmitForm: payload =>\n        dispatch({ type: CODE_SUBMITTED, payload }),\n    onCodeAdded: payload =>\n        dispatch({ type: CODE_ADDED, payload}),\n    onCodeUpdate: payload =>\n        dispatch({type: CODE_UPDATED, payload})\n});\n\nclass CodeForm extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            newCode: {\n                code: '',\n                title: '',\n                description: ''\n            }\n        }\n\n        this.updateState = ev => {\n            const tempCode = this.state.newCode;\n            Object.assign(tempCode, {[ev.target.name]: ev.target.value})\n            this.setState({ newCode: tempCode });\n        };\n\n        this.submitForm.bind(this);\n    }\n\n    submitForm = ev => {\n        ev.preventDefault();\n\n        const promise = this.hasCurrentCode ?\n            agent.Code.update(this.state.newCode, this.props.codeId) :\n            agent.Code.create(this.state.newCode);\n        this.props.onSubmitForm(promise);\n    };\n\n    get hasCurrentCode() {\n        return typeof this.props.codeId !== 'undefined' && this.props.codeId !== null;\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.codeId && prevProps.codeId !== this.props.codeId) {\n            // loaded with id\n            return this.props.onLoad(agent.Code.get(this.props.codeId));\n        }\n        if (!prevProps.hasOwnProperty('codeId') && this.props.codeId === null) {\n            // loaded without id\n            this.setState({ newCode: {\n                code: this.props.code || '',\n                title: this.props.title || '',\n                description: this.props.description || ''\n             }\n            });\n        }\n        if (this.props.newCode) { \n            // successful update/insert\n            if (this.hasCurrentCode)\n                this.props.onCodeUpdate({code: this.props.newCode});\n            else\n                this.props.onCodeAdded({code: this.props.newCode});\n            this.cancel();\n        }\n        if (!prevProps.codeReceived && this.props.codeReceived) {\n            // successful get\n            this.setState({ newCode: {\n                code: this.props.code || '',\n                title: this.props.title || '',\n                description: this.props.description || ''\n             }\n            });\n        }\n    }\n\n    componentWillUnmount() {\n        this.props.onUnload();\n    }\n\n    cancel() {\n        this.props.onToggle();\n        this.props.onUnload();\n    }\n\n    render() {\n        return (\n            <Modal isOpen={this.props.modal} toggle={this.cancel.bind(this)}>\n                <Form onSubmit={this.submitForm}>\n                    <ModalHeader>{this.hasCurrentCode ? 'Update Code' : 'Add new Code'}</ModalHeader>\n                    <ModalBody>\n                        <ListErrors errors={this.props.errors} />\n                        <FormGroup row>\n                            <Label for=\"code\" sm={2}>Code</Label>\n                            <Col sm={10}>\n                                <Input type=\"text\" name=\"code\" id=\"code\" placeholder=\"Code\"\n                                       value={this.state.newCode.code}\n                                       onChange={this.updateState}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label for=\"title\" sm={2}>Title</Label>\n                            <Col sm={10}>\n                                <Input type=\"text\" name=\"title\" id=\"title\" placeholder=\"Title\"\n                                       value={this.state.newCode.title}\n                                       onChange={this.updateState}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label for=\"description\" sm={2}>Description</Label>\n                            <Col sm={10}>\n                                <Input type=\"textarea\" name=\"description\" id=\"description\" placeholder=\"Description\"\n                                       value={this.state.newCode.description}\n                                       onChange={this.updateState}/>\n                            </Col>\n                        </FormGroup>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"primary\" type=\"submit\"\n                                disabled={this.props.inProgress}>\n                            {this.hasCurrentCode ? 'Save' : 'Add'}</Button>{' '}\n                        <Button color=\"secondary\" onClick={this.cancel.bind(this)}>Cancel</Button>\n                    </ModalFooter>\n                </Form>\n            </Modal>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CodeForm);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport agent from '../../agent';\nimport CodeList from './CodeList';\nimport ListErrors from '../ListErrors';\nimport CodeForm from './CodeForm';\nimport {Nav, NavItem, Button, Alert} from 'reactstrap';\nimport {\n    CODE_PAGE_LOADED,\n    CODE_PAGE_UNLOADED,\n    CODE_EDITOR_PAGE_TOGGLED\n} from \"../../constants/actionTypes\";\n\nconst mapStateToProps = state => ({\n    ...state.code\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onLoad: payload => dispatch({type: CODE_PAGE_LOADED, payload}),\n    onUnload: () => dispatch({ type: CODE_PAGE_UNLOADED }),\n    onToggleCodeEditor: () => dispatch({type: CODE_EDITOR_PAGE_TOGGLED})\n});\n\nclass Code extends Component {\n\n    componentDidMount() {\n        this.props.onLoad(Promise.all([\n            agent.Code.all()\n        ]));\n    }\n\n    componentWillUnmount() {\n        this.props.onUnload();\n    }\n\n    render() {\n        return (\n            <div className=\"container main\">\n                <ListErrors errors={this.props.errors} />\n                <Nav className=\"navbar--settings\">\n                    <NavItem>\n                        <Button color=\"secondary\" outline onClick={this.props.onToggleCodeEditor}>Add Code</Button>\n                    </NavItem>\n                </Nav>\n                <hr/>\n                {this.props.successId ? <Alert color=\"success\">Action successfull. Id:{this.props.successId}</Alert> : null}\n                <h1>Community ICF Codes</h1>\n                <CodeList codes={this.props.codes} error={this.props.error} />\n                <CodeForm/>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Code);","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Redirect } from 'react-router-dom'\n\nexport default function ProtectedRoute({ component: Component, currentUser, ...rest }) {\n    return (\n      <Route\n        {...rest}\n        render={props =>\n            currentUser ? (\n            <Component {...props} {...currentUser}/>\n          ) : (\n            <Redirect to=\"/\"/>\n          )\n        }\n      />\n    );\n  }","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport { APP_LOAD } from '../constants/actionTypes';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Header from './Header';\nimport NoMatch from './NoMatch';\nimport Home from './home';\nimport Login from '../components/Login';\nimport Register from '../components/Register';\nimport Editor from './editor/index';\nimport Settings from '../components/Settings';\nimport Code from '../components/code/index';\nimport agent from '../agent';\nimport ProtectedRoute from '../utils/ProtectedRoute';\n\nconst mapStateToProps = state => ({\n    appLoaded: state.common.appLoaded,\n    appName: state.common.appName,\n    currentUser: state.common.currentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onLoad: (payload, token) =>\n        dispatch({ type: APP_LOAD, payload, token, skipTracking: true })\n});\n\nclass App extends Component {\n\n    componentDidMount() {\n        const token = window.localStorage.getItem('jwt');\n        if (token) {\n            agent.setToken(token);\n        }\n\n        this.props.onLoad(token ? agent.Auth.current() : null, token);\n    }\n\n    render() {\n        if (this.props.appLoaded) {\n            return (\n                <div>\n                    <Header\n                        appName={this.props.appName}\n                        currentUser={this.props.currentUser} />\n                    <Switch>\n                        <Route exact path=\"/\" component={Home}/>\n                        <Route path=\"/login\" component={Login} />\n                        <Route path=\"/register\" component={Register} />\n                        <ProtectedRoute path=\"/editor/:id\" component={Editor} currentUser={this.props.currentUser}/>\n                        <ProtectedRoute path=\"/editor\" component={Editor} currentUser={this.props.currentUser}/>\n                        <ProtectedRoute path=\"/code\" component={Code} currentUser={this.props.currentUser}/>\n                        <ProtectedRoute path=\"/settings\" component={Settings} currentUser={this.props.currentUser}/>\n                        <Route component={NoMatch} />\n                    </Switch>\n                </div>\n            );\n        }\n        return (\n            <div>\n                <Header\n                    appName={this.props.appName}\n                    currentUser={this.props.currentUser}/>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {store, history} from './store';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'react-widgets/dist/css/react-widgets.css';\n\nimport {Route, Switch} from 'react-router-dom';\nimport {ConnectedRouter} from 'connected-react-router';\n\nimport App from './components/App';\n\nReactDOM.render((\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <Switch>\n                <Route path=\"/\" component={App} />\n            </Switch>\n        </ConnectedRouter>\n    </Provider>\n), document.getElementById('root'));\n","import superagentPromise from 'superagent-promise';\nimport _superagent from 'superagent';\n\nconst superagent = superagentPromise(_superagent, global.Promise);\n\nconst API_ROOT = 'https://server1.hilberg-it.de:443/icf-report-app/api/';\n//const API_ROOT = 'http://localhost:80/app/api/';\n\nconst encode = encodeURIComponent;\nconst responseBody = res => res.body;\n\nlet token = null;\nconst tokenPlugin = req => {\n    if (token) {\n        req.set('authorization', `Bearer ${token}`);\n    }\n};\n\nconst requests = {\n    del: url =>\n        superagent.del(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\n    get: url =>\n        superagent.get(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\n    put: (url, body) =>\n        superagent.put(`${API_ROOT}${url}`, body).set('Content-Type', 'application/json').use(tokenPlugin).then(responseBody),\n    post: (url, body) =>\n        superagent.post(`${API_ROOT}${url}`, body).set('Content-Type', 'application/json').use(tokenPlugin).then(responseBody)\n};\n\nconst Auth = {\n    current: () =>\n        requests.get('user'),\n    login: (email, password) =>\n        requests.post('user/login', { user: { email, password } }),\n    register: (username, email, password, firstname, lastname) =>\n        requests.post('user', { user: { username, email, password, firstname, lastname } }),\n    save: user =>\n        requests.put('user', { user })\n};\n\nconst Profile = {\n    get: username =>\n        requests.get(`profile/${username}`)\n};\n\nconst Report = {\n    all: () =>\n        requests.get('report'),\n    get: reportId =>\n        requests.get(`report/${reportId}`),\n    create: report =>\n        requests.post('report', {report}),\n    update: (report, reportId) =>\n        requests.put(`report/${reportId}`, {report}),\n    remove: reportId =>\n        requests.del(`report/${reportId}`),\n    getPdfFromDB: reportId =>\n        superagent.get(`${API_ROOT}report/createPdfFromDB/${reportId}`).responseType('arraybuffer').use(tokenPlugin),\n    getPdf: report =>\n        superagent.post(`${API_ROOT}report/createPdf`, {report}).set('Content-Type', 'application/json').responseType('arraybuffer').use(tokenPlugin)\n};\n\nconst Function = {\n    all: (reportId, kind) =>\n        requests.get(`report/${reportId}/function?kind=${encode(kind)}`),\n    get: (reportId, functionId) =>\n        requests.get(`report/${reportId}/function/${functionId}`),\n    create: (reportId, functionParam) =>\n        requests.post(`report/${reportId}/function`, {functionParam}),\n    update: (reportId, functionParam, functionId) =>\n        requests.put(`report/${reportId}/function/${functionId}`, {functionParam}),\n    remove: (reportId, functionId) =>\n        requests.del(`report/${reportId}/function/${functionId}`)\n};\n\nconst Patient = {\n    all: () =>\n        requests.get('patient'),\n    get: patientId =>\n        requests.get(`patient/${patientId}`),\n    create: patient =>\n        requests.post('patient', {patient}),\n    update: (patient, patientId) =>\n        requests.put(`patient/${patientId}`, {patient}),\n    remove: patientId =>\n        requests.del(`patient/${patientId}`)\n};\n\nconst Therapist = {\n    all: () =>\n        requests.get('therapist'),\n    get: therapistId =>\n        requests.get(`therapist/${therapistId}`),\n    create: therapist =>\n        requests.post('therapist', {therapist}),\n    update: (therapist, therapistId) =>\n        requests.put(`therapist/${therapistId}`, {therapist}),\n    remove: therapistId =>\n        requests.del(`therapist/${therapistId}`)\n};\n\nconst Code = {\n    all: () =>\n        requests.get('code'),\n    get: codeId =>\n        requests.get(`code/${codeId}`),\n    create: code =>\n        requests.post('code', {code}),\n    update: (code, codeId) =>\n        requests.put(`code/${codeId}`, {code}),\n    remove: codeId =>\n        requests.del(`code/${codeId}`)\n\n};\n\nexport default {\n    Auth,\n    Profile,\n    Report,\n    Function,\n    Patient,\n    Therapist,\n    Code,\n    setToken: _token => { token = _token; }\n}"],"sourceRoot":""}